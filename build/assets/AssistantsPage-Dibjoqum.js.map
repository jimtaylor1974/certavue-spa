{"version":3,"file":"AssistantsPage-Dibjoqum.js","sources":["../../src/api/assistants/useGetPagedAssistants.ts","../../src/components/sysadmin/ai/AssistantsPage.tsx"],"sourcesContent":["import {useQuery} from '@tanstack/react-query';\r\nimport {useCreateAuthenticatedFetch} from '../useCreateAuthenticatedFetch.ts';\r\nimport {handleResponse} from '../handleResponse.ts';\r\nimport baseUrl from '../baseUrl.ts';\r\nimport {PagedResult, AssistantModel} from '../../types.ts';\r\n\r\nexport const useGetPagedAssistants = (\r\n    page: number,\r\n    perPage: number,\r\n    searchText?: string | null,\r\n    options?: Record<string, unknown>\r\n) => {\r\n    const authenticatedFetch = useCreateAuthenticatedFetch();\r\n    return useQuery({\r\n        queryKey: ['assistants', 'paged', page, perPage, searchText],\r\n        queryFn: async () => {\r\n            let url = `${baseUrl}/api/assistants?page=${page}&perPage=${perPage}`;\r\n            if (searchText && searchText.trim() !== '') {\r\n                url += `&search=${encodeURIComponent(searchText)}`;\r\n            }\r\n            const response = await authenticatedFetch(url);\r\n            return handleResponse<PagedResult<AssistantModel>>(response);\r\n        },\r\n        ...options\r\n    });\r\n};","import React, {useState} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {Button, Table, Spinner} from 'reactstrap';\r\nimport {AssistantModel, PagedResult} from '../../../types';\r\nimport Pagination from '../../utility/Pagination';\r\nimport ErrorDisplay from '../../utility/ErrorDisplay';\r\nimport Search from '../../utility/Search';\r\nimport {useGetPagedAssistants} from '../../../api/assistants/useGetPagedAssistants';\r\n\r\nconst AssistantsPage: React.FC = () => {\r\n    const [page, setPage] = useState(1);\r\n    const [perPage, setPerPage] = useState(20);\r\n    const [searchText, setSearchText] = useState<string | null>(null);\r\n    const navigate = useNavigate();\r\n\r\n    const {data, isLoading, error} = useGetPagedAssistants(\r\n        page,\r\n        perPage,\r\n        searchText || undefined\r\n    );\r\n\r\n    const handleSearch = (text: string) => {\r\n        setSearchText(text || null);\r\n        setPage(1);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"dashboard-header-controls d-flex justify-content-between align-items-center mb-3\">\r\n                <h1 className=\"dashboard-title\">AI Assistants</h1>\r\n                <Button\r\n                    color=\"primary\"\r\n                    onClick={() => navigate('/sysadmin/ai/assistants/_')}\r\n                >\r\n                    Create New Assistant\r\n                </Button>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <Search searchText={searchText} onSearch={handleSearch} />\r\n            </div>\r\n            {isLoading && <Spinner />}\r\n            {error && <ErrorDisplay error={error} />}\r\n            {data && (\r\n                <>\r\n                    <Table striped responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Key</th>\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n                                <th>Tools</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {data.items.map((assistant: AssistantModel) => (\r\n                                <tr key={assistant.id}>\r\n                                    <td>\r\n                                        <code>{assistant.key}</code>\r\n                                    </td>\r\n                                    <td>{assistant.name}</td>\r\n                                    <td>{assistant.description}</td>\r\n                                    <td>\r\n                                        <span className=\"text-muted\">\r\n                                            {assistant.tools.length} tool\r\n                                            {assistant.tools.length !== 1\r\n                                                ? 's'\r\n                                                : ''}\r\n                                        </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Button\r\n                                            size=\"sm\"\r\n                                            color=\"secondary\"\r\n                                            onClick={() =>\r\n                                                navigate(\r\n                                                    `/sysadmin/ai/assistants/${assistant.id}`\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            Edit\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Pagination\r\n                        pagedResult={data as PagedResult<AssistantModel>}\r\n                        onPageSelected={setPage}\r\n                        perPage={perPage}\r\n                        onPerPageSelected={setPerPage}\r\n                    />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AssistantsPage;\r\n"],"names":["useGetPagedAssistants","page","perPage","searchText","options","authenticatedFetch","useCreateAuthenticatedFetch","useQuery","url","baseUrl","response","handleResponse","AssistantsPage","setPage","useState","setPerPage","setSearchText","navigate","useNavigate","data","isLoading","error","handleSearch","text","jsxs","Fragment","jsx","Button","Search","Spinner","ErrorDisplay","Table","assistant","Pagination"],"mappings":"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"}