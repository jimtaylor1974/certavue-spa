{"version":3,"file":"CompanyRegistrationPage-S08AxbIg.js","sources":["../../src/api/customers/useRegisterCustomer.ts","../../src/components/customers/CompanyRegistrationPage.tsx"],"sourcesContent":["import {\r\n    useMutation,\r\n    UseMutationOptions,\r\n    UseMutationResult\r\n} from '@tanstack/react-query';\r\nimport {AuthResult, CompanyRegistrationCommand} from '../../types';\r\nimport {useCreateAuthenticatedFetch} from '../useCreateAuthenticatedFetch';\r\nimport baseUrl from '../baseUrl';\r\nimport {handleResponse} from '../handleResponse';\r\n\r\nconst useRegisterCustomer = (\r\n    options?: UseMutationOptions<AuthResult, Error, CompanyRegistrationCommand>\r\n): UseMutationResult<AuthResult, Error, CompanyRegistrationCommand> => {\r\n    const authenticatedFetch = useCreateAuthenticatedFetch();\r\n\r\n    return useMutation({\r\n        mutationFn: async (command: CompanyRegistrationCommand) => {\r\n            const response = await authenticatedFetch(\r\n                `${baseUrl}/api/customers/register`,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify(command)\r\n                }\r\n            );\r\n            return handleResponse(response);\r\n        },\r\n        ...options\r\n    });\r\n};\r\n\r\nexport default useRegisterCustomer;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useForm, Controller, useFieldArray} from 'react-hook-form';\r\nimport {\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Alert,\r\n    Input,\r\n    FormText,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardBody,\r\n    Progress,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    TabContent,\r\n    TabPane\r\n} from 'reactstrap';\r\nimport {toast} from 'react-toastify';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {\r\n    Building2,\r\n    User,\r\n    Users,\r\n    CreditCard,\r\n    Check,\r\n    AlertTriangle,\r\n    Plus,\r\n    Trash2,\r\n    LogIn\r\n} from 'lucide-react';\r\nimport isNullOrWhiteSpace from '../../lib/isNullOrWhiteSpace';\r\nimport unknownErrorToString from '../../lib/unknownErrorToString';\r\nimport DisplayFormError from '../utility/DisplayFormError';\r\nimport TermsAndConditions from '../pages/TermsAndConditions';\r\nimport Certavue from '../utility/Certavue';\r\nimport useRegisterCustomer from '../../api/customers/useRegisterCustomer';\r\nimport {CompanyRegistrationCommand, CustomerRole} from '../../types';\r\nimport TimeZoneSelect from '../utility/TimeZoneSelect';\r\nimport {useAuthStateManager} from '../../hooks/useAuthStateManager';\r\nimport customerRoleOptions from '../../lib/customerRoleOptions';\r\n\r\ninterface ContactPerson {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    jobTitle?: string;\r\n    phoneNumber?: string;\r\n    roles: CustomerRole[];\r\n}\r\n\r\ninterface CompanySubscriptionFormData {\r\n    // Company details\r\n    companyName: string;\r\n    timeZone: string;\r\n\r\n    // Administrator contact\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    jobTitle?: string;\r\n    phoneNumber?: string;\r\n\r\n    // Additional contacts\r\n    additionalContacts: ContactPerson[];\r\n\r\n    // Terms agreement\r\n    acceptTerms: boolean;\r\n}\r\n\r\nconst CompanyRegistrationPage: React.FC = () => {\r\n    const {\r\n        isAuthenticated,\r\n        setSignInRedirect,\r\n        onAuthenticated,\r\n        givenName,\r\n        familyName,\r\n        email\r\n    } = useAuthStateManager();\r\n    const [activeTab, setActiveTab] = useState<string>('1');\r\n    const [backendError, setBackendError] = useState<string | null>(null);\r\n    const navigate = useNavigate();\r\n\r\n    const browserTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n\r\n    const {\r\n        control,\r\n        handleSubmit,\r\n        watch,\r\n        formState: {errors},\r\n        setValue,\r\n        trigger\r\n    } = useForm<CompanySubscriptionFormData>({\r\n        mode: 'onChange',\r\n        defaultValues: {\r\n            companyName: '',\r\n            timeZone: browserTimeZone,\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            jobTitle: '',\r\n            phoneNumber: '',\r\n            additionalContacts: [],\r\n            acceptTerms: false\r\n        }\r\n    });\r\n\r\n    const {fields, append, remove} = useFieldArray({\r\n        control,\r\n        name: 'additionalContacts'\r\n    });\r\n\r\n    const watchedFields = watch();\r\n\r\n    useEffect(() => {\r\n        // Populate form with authenticated user's information\r\n        if (isAuthenticated && givenName && familyName && email) {\r\n            setValue('firstName', givenName);\r\n            setValue('lastName', familyName);\r\n            setValue('email', email);\r\n        }\r\n    }, [isAuthenticated, givenName, familyName, email, setValue]);\r\n\r\n    // Subscription mutation handler\r\n    const registrationMutation = useRegisterCustomer({\r\n        onSuccess: authResult => {\r\n            toast.success(\r\n                'Company registration successful! You are now signed up for the free trial.'\r\n            );\r\n\r\n            if (authResult.authTokens) {\r\n                onAuthenticated(authResult.authTokens);\r\n                navigate('/register-company-completed');\r\n            } else {\r\n                toast.error(unknownErrorToString(authResult.authError));\r\n            }\r\n        },\r\n        onError: (error: unknown) => {\r\n            setBackendError(unknownErrorToString(error));\r\n            toast.error('There was an error processing your subscription.');\r\n        }\r\n    });\r\n\r\n    // Progress calculation\r\n    const calculateProgress = () => {\r\n        let progress = 0;\r\n\r\n        // Company details section (30%)\r\n        if (\r\n            !isNullOrWhiteSpace(watchedFields.companyName) &&\r\n            !isNullOrWhiteSpace(watchedFields.timeZone)\r\n        ) {\r\n            progress += 30;\r\n        }\r\n\r\n        // Primary contact section (30%)\r\n        if (\r\n            !isNullOrWhiteSpace(watchedFields.firstName) &&\r\n            !isNullOrWhiteSpace(watchedFields.lastName) &&\r\n            !isNullOrWhiteSpace(watchedFields.email)\r\n        ) {\r\n            progress += 30;\r\n        }\r\n\r\n        // Terms and Review section (40%)\r\n        if (watchedFields.acceptTerms) {\r\n            progress += 40;\r\n        }\r\n\r\n        return progress;\r\n    };\r\n\r\n    // Tab navigation with validation\r\n    const toggleTab = async (tab: string) => {\r\n        // Only allow navigation to next tab if current tab is valid\r\n        const currentTabNumber = parseInt(activeTab);\r\n        const nextTabNumber = parseInt(tab);\r\n\r\n        if (nextTabNumber > currentTabNumber) {\r\n            let isTabValid = false;\r\n\r\n            if (currentTabNumber === 1) {\r\n                // Validate company details including company name and time zone\r\n                isTabValid = await trigger(['companyName', 'timeZone']);\r\n            } else if (currentTabNumber === 2) {\r\n                // Validate primary contact\r\n                isTabValid = await trigger(['firstName', 'lastName', 'email']);\r\n            } else {\r\n                isTabValid = true;\r\n            }\r\n\r\n            if (!isTabValid) return;\r\n        }\r\n\r\n        setActiveTab(tab);\r\n    };\r\n\r\n    // Add a new contact handler\r\n    const handleAddContact = () => {\r\n        append({\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            jobTitle: '',\r\n            phoneNumber: '',\r\n            roles: []\r\n        });\r\n    };\r\n\r\n    // Main form submission\r\n    const onSubmit = (data: CompanySubscriptionFormData) => {\r\n        setBackendError(null);\r\n\r\n        // Construct command for API\r\n        const command: CompanyRegistrationCommand = {\r\n            // Customer details\r\n            customerName: data.companyName,\r\n            timeZone: data.timeZone,\r\n\r\n            // Primary contact with Owner role\r\n            administratorContact: {\r\n                firstName: givenName || '',\r\n                lastName: familyName || '',\r\n                email: email || '',\r\n                jobTitle: data.jobTitle || '',\r\n                phoneNumber: data.phoneNumber || '',\r\n                roles: [CustomerRole.Administrator]\r\n            },\r\n\r\n            // Additional contacts\r\n            additionalContacts: data.additionalContacts.filter(\r\n                contact =>\r\n                    !isNullOrWhiteSpace(contact.firstName) &&\r\n                    !isNullOrWhiteSpace(contact.lastName) &&\r\n                    !isNullOrWhiteSpace(contact.email)\r\n            )\r\n        };\r\n\r\n        // Submit to API\r\n        registrationMutation.mutate(command);\r\n    };\r\n\r\n    // Toggle role selection for additional contacts\r\n    const toggleRole = (contactIndex: number, role: CustomerRole) => {\r\n        const currentRoles =\r\n            watchedFields.additionalContacts[contactIndex].roles || [];\r\n        const newRoles = currentRoles.includes(role)\r\n            ? currentRoles.filter(r => r !== role)\r\n            : [...currentRoles, role];\r\n\r\n        setValue(`additionalContacts.${contactIndex}.roles`, newRoles);\r\n    };\r\n\r\n    // Handle redirection for login\r\n    const handleLoginRedirect = () => {\r\n        setSignInRedirect('/register-company');\r\n        navigate('/login');\r\n    };\r\n\r\n    // Handle redirection for sign-up\r\n    const handleSignUpRedirect = () => {\r\n        setSignInRedirect('/register-company');\r\n        navigate('/sign-up');\r\n    };\r\n\r\n    // Display authentication options if not authenticated\r\n    if (!isAuthenticated) {\r\n        return (\r\n            <Container className=\"mt-5 mb-5\">\r\n                <Row className=\"justify-content-center\">\r\n                    <Col xs={12} md={8} lg={6}>\r\n                        <div className=\"text-center mb-4\">\r\n                            <Certavue />\r\n                            <h2 className=\"mt-3\">Company Registration</h2>\r\n                            <p className=\"text-muted\">\r\n                                Register your company for certavue\r\n                            </p>\r\n                        </div>\r\n\r\n                        <Card>\r\n                            <CardBody className=\"p-4\">\r\n                                <div className=\"text-center mb-4\">\r\n                                    <h4>Create a Personal User Login First</h4>\r\n                                    <p>\r\n                                        To register your company, you need a\r\n                                        personal user login. This is separate\r\n                                        from your company account.\r\n                                    </p>\r\n                                </div>\r\n\r\n                                <Row className=\"mt-4\">\r\n                                    <Col md={6} className=\"mb-3 mb-md-0\">\r\n                                        <Card className=\"h-100 border\">\r\n                                            <CardBody className=\"d-flex flex-column\">\r\n                                                <h5>New User?</h5>\r\n                                                <p className=\"flex-grow-1\">\r\n                                                    Create a personal user login\r\n                                                    to begin registering your\r\n                                                    company. This creates only\r\n                                                    your personal login, not the\r\n                                                    company account.\r\n                                                </p>\r\n                                                <Button\r\n                                                    color=\"primary\"\r\n                                                    block\r\n                                                    onClick={\r\n                                                        handleSignUpRedirect\r\n                                                    }\r\n                                                    className=\"mt-auto\"\r\n                                                >\r\n                                                    <Plus\r\n                                                        size={16}\r\n                                                        className=\"me-2\"\r\n                                                    />\r\n                                                    Create User Login\r\n                                                </Button>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <Card className=\"h-100 border\">\r\n                                            <CardBody className=\"d-flex flex-column\">\r\n                                                <h5>Existing User?</h5>\r\n                                                <p className=\"flex-grow-1\">\r\n                                                    Sign in with your personal\r\n                                                    login to continue with your\r\n                                                    company registration.\r\n                                                </p>\r\n                                                <Button\r\n                                                    color=\"secondary\"\r\n                                                    block\r\n                                                    onClick={\r\n                                                        handleLoginRedirect\r\n                                                    }\r\n                                                    className=\"mt-auto\"\r\n                                                >\r\n                                                    <LogIn\r\n                                                        size={16}\r\n                                                        className=\"me-2\"\r\n                                                    />\r\n                                                    Sign in to User Account\r\n                                                </Button>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <div className=\"text-center mt-4\">\r\n                                    <p className=\"text-muted small\">\r\n                                        After signing in with your personal user\r\n                                        login, you'll be redirected back to\r\n                                        complete your company registration.\r\n                                    </p>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container className=\"mt-5 mb-5\">\r\n            <Row className=\"justify-content-center\">\r\n                <Col xs={12} md={10} lg={8}>\r\n                    <div className=\"text-center mb-4\">\r\n                        <Certavue />\r\n                        <h2 className=\"mt-3\">Company Registration</h2>\r\n                        <p className=\"text-muted\">\r\n                            Register your company for certavue\r\n                        </p>\r\n\r\n                        {/* Progress indicator */}\r\n                        <Progress\r\n                            className=\"mt-4\"\r\n                            value={calculateProgress()}\r\n                        />\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <span>Company Details</span>\r\n                            <span>Contact Details</span>\r\n                            <span>Additional Contacts</span>\r\n                            <span>Review & Confirm</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Card>\r\n                        <CardBody>\r\n                            <Nav tabs className=\"mb-4\">\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={\r\n                                            activeTab === '1' ? 'active' : ''\r\n                                        }\r\n                                        onClick={() => toggleTab('1')}\r\n                                    >\r\n                                        <Building2 size={16} className=\"me-2\" />\r\n                                        Company\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={\r\n                                            activeTab === '2' ? 'active' : ''\r\n                                        }\r\n                                        onClick={() => toggleTab('2')}\r\n                                    >\r\n                                        <User size={16} className=\"me-2\" />\r\n                                        Contact Details\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={\r\n                                            activeTab === '3' ? 'active' : ''\r\n                                        }\r\n                                        onClick={() => toggleTab('3')}\r\n                                    >\r\n                                        <Users size={16} className=\"me-2\" />\r\n                                        Additional Contacts\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={\r\n                                            activeTab === '4' ? 'active' : ''\r\n                                        }\r\n                                        onClick={() => toggleTab('4')}\r\n                                    >\r\n                                        <CreditCard\r\n                                            size={16}\r\n                                            className=\"me-2\"\r\n                                        />\r\n                                        Review & Confirm\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n\r\n                            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                                <TabContent activeTab={activeTab}>\r\n                                    {/* Tab 1: Company Details */}\r\n                                    <TabPane tabId=\"1\">\r\n                                        <h5 className=\"mb-3\">\r\n                                            Company Information\r\n                                        </h5>\r\n                                        <FormGroup>\r\n                                            <Label for=\"companyName\">\r\n                                                Company Name *\r\n                                            </Label>\r\n                                            <Controller\r\n                                                name=\"companyName\"\r\n                                                control={control}\r\n                                                rules={{\r\n                                                    required:\r\n                                                        'Company name is required'\r\n                                                }}\r\n                                                render={({field}) => (\r\n                                                    <Input\r\n                                                        {...field}\r\n                                                        type=\"text\"\r\n                                                        id=\"companyName\"\r\n                                                        placeholder=\"Enter your company name\"\r\n                                                        invalid={\r\n                                                            !!errors.companyName\r\n                                                        }\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                            <DisplayFormError\r\n                                                error={errors.companyName}\r\n                                                fieldDisplayName=\"Company Name\"\r\n                                            />\r\n                                        </FormGroup>\r\n\r\n                                        <Controller\r\n                                            name=\"timeZone\"\r\n                                            control={control}\r\n                                            rules={{\r\n                                                required:\r\n                                                    'Time zone is required'\r\n                                            }}\r\n                                            render={({field, fieldState}) => (\r\n                                                <>\r\n                                                    <TimeZoneSelect\r\n                                                        value={field.value}\r\n                                                        onChange={\r\n                                                            field.onChange\r\n                                                        }\r\n                                                        className=\"mb-3\"\r\n                                                        label=\"Timezone\"\r\n                                                    />\r\n                                                    {fieldState.error && (\r\n                                                        <DisplayFormError\r\n                                                            error={\r\n                                                                fieldState.error\r\n                                                            }\r\n                                                            fieldDisplayName=\"Time Zone\"\r\n                                                        />\r\n                                                    )}\r\n                                                </>\r\n                                            )}\r\n                                        />\r\n\r\n                                        <div className=\"d-flex justify-content-end mt-4\">\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                onClick={() => toggleTab('2')}\r\n                                                disabled={\r\n                                                    !watchedFields.companyName ||\r\n                                                    !watchedFields.timeZone\r\n                                                }\r\n                                            >\r\n                                                Next: Primary Contact\r\n                                            </Button>\r\n                                        </div>\r\n                                    </TabPane>\r\n\r\n                                    {/* Tab 2: Primary Contact */}\r\n                                    <TabPane tabId=\"2\">\r\n                                        <h5 className=\"mb-3\">\r\n                                            Primary Contact Information\r\n                                        </h5>\r\n                                        <p className=\"text-muted small mb-3\">\r\n                                            This person will be assigned the\r\n                                            Administrator role.\r\n                                        </p>\r\n\r\n                                        <div className=\"mb-4 p-3 bg-light rounded\">\r\n                                            <div className=\"d-flex align-items-center mb-2\">\r\n                                                <User\r\n                                                    size={18}\r\n                                                    className=\"me-2 text-primary\"\r\n                                                />\r\n                                                <strong>\r\n                                                    Your Account Information\r\n                                                </strong>\r\n                                            </div>\r\n                                            <Row className=\"mt-3\">\r\n                                                <Col md={6}>\r\n                                                    <p className=\"mb-1\">\r\n                                                        <strong>\r\n                                                            First Name:\r\n                                                        </strong>{' '}\r\n                                                        {givenName}\r\n                                                    </p>\r\n                                                </Col>\r\n                                                <Col md={6}>\r\n                                                    <p className=\"mb-1\">\r\n                                                        <strong>\r\n                                                            Last Name:\r\n                                                        </strong>{' '}\r\n                                                        {familyName}\r\n                                                    </p>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <p className=\"mb-1\">\r\n                                                <strong>Email:</strong> {email}\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <Row>\r\n                                            <Col md={6}>\r\n                                                <FormGroup>\r\n                                                    <Label for=\"jobTitle\">\r\n                                                        Job Title\r\n                                                    </Label>\r\n                                                    <Controller\r\n                                                        name=\"jobTitle\"\r\n                                                        control={control}\r\n                                                        render={({field}) => (\r\n                                                            <Input\r\n                                                                {...field}\r\n                                                                type=\"text\"\r\n                                                                id=\"jobTitle\"\r\n                                                                placeholder=\"Enter job title\"\r\n                                                            />\r\n                                                        )}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                            <Col md={6}>\r\n                                                <FormGroup>\r\n                                                    <Label for=\"phoneNumber\">\r\n                                                        Phone Number\r\n                                                    </Label>\r\n                                                    <Controller\r\n                                                        name=\"phoneNumber\"\r\n                                                        control={control}\r\n                                                        render={({field}) => (\r\n                                                            <Input\r\n                                                                {...field}\r\n                                                                type=\"tel\"\r\n                                                                id=\"phoneNumber\"\r\n                                                                placeholder=\"Enter phone number\"\r\n                                                            />\r\n                                                        )}\r\n                                                    />\r\n                                                </FormGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        <div className=\"d-flex justify-content-between mt-4\">\r\n                                            <Button\r\n                                                color=\"secondary\"\r\n                                                outline\r\n                                                onClick={() => toggleTab('1')}\r\n                                            >\r\n                                                Back\r\n                                            </Button>\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                onClick={() => toggleTab('3')}\r\n                                            >\r\n                                                Next: Additional Contacts\r\n                                            </Button>\r\n                                        </div>\r\n                                    </TabPane>\r\n\r\n                                    {/* Tab 3: Additional Contacts */}\r\n                                    <TabPane tabId=\"3\">\r\n                                        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                            <h5 className=\"mb-0\">\r\n                                                Additional Contacts\r\n                                            </h5>\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                size=\"sm\"\r\n                                                outline\r\n                                                onClick={handleAddContact}\r\n                                            >\r\n                                                <Plus\r\n                                                    size={16}\r\n                                                    className=\"me-1\"\r\n                                                />{' '}\r\n                                                Add Contact\r\n                                            </Button>\r\n                                        </div>\r\n                                        <p className=\"text-muted small mb-4\">\r\n                                            Add team members who will have\r\n                                            different roles in your company. You\r\n                                            can assign multiple roles to each\r\n                                            contact, and team members can be\r\n                                            added or updated after your company\r\n                                            registration is complete.\r\n                                        </p>\r\n\r\n                                        {fields.length === 0 && (\r\n                                            <Alert\r\n                                                color=\"info\"\r\n                                                className=\"mb-4\"\r\n                                            >\r\n                                                <div className=\"d-flex align-items-center\">\r\n                                                    <AlertTriangle\r\n                                                        size={20}\r\n                                                        className=\"me-2\"\r\n                                                    />\r\n                                                    <span>\r\n                                                        No additional contacts\r\n                                                        added yet. You can add\r\n                                                        contacts now or later.\r\n                                                    </span>\r\n                                                </div>\r\n                                            </Alert>\r\n                                        )}\r\n\r\n                                        {fields.map((field, index) => (\r\n                                            <Card\r\n                                                key={field.id}\r\n                                                className=\"mb-4 border\"\r\n                                            >\r\n                                                <CardBody>\r\n                                                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                                                        <h6 className=\"mb-0\">\r\n                                                            Contact #{index + 1}\r\n                                                        </h6>\r\n                                                        <Button\r\n                                                            color=\"danger\"\r\n                                                            size=\"sm\"\r\n                                                            outline\r\n                                                            onClick={() =>\r\n                                                                remove(index)\r\n                                                            }\r\n                                                        >\r\n                                                            <Trash2 size={16} />\r\n                                                        </Button>\r\n                                                    </div>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={6}>\r\n                                                            <FormGroup>\r\n                                                                <Label\r\n                                                                    for={`contact-firstName-${index}`}\r\n                                                                >\r\n                                                                    First Name *\r\n                                                                </Label>\r\n                                                                <Controller\r\n                                                                    name={`additionalContacts.${index}.firstName`}\r\n                                                                    control={\r\n                                                                        control\r\n                                                                    }\r\n                                                                    rules={{\r\n                                                                        required:\r\n                                                                            'First name is required'\r\n                                                                    }}\r\n                                                                    render={({\r\n                                                                        field\r\n                                                                    }) => (\r\n                                                                        <Input\r\n                                                                            {...field}\r\n                                                                            type=\"text\"\r\n                                                                            id={`contact-firstName-${index}`}\r\n                                                                            placeholder=\"Enter first name\"\r\n                                                                            invalid={\r\n                                                                                !!errors\r\n                                                                                    .additionalContacts?.[\r\n                                                                                    index\r\n                                                                                ]\r\n                                                                                    ?.firstName\r\n                                                                            }\r\n                                                                        />\r\n                                                                    )}\r\n                                                                />\r\n                                                                <DisplayFormError\r\n                                                                    error={\r\n                                                                        errors\r\n                                                                            .additionalContacts?.[\r\n                                                                            index\r\n                                                                        ]\r\n                                                                            ?.firstName\r\n                                                                    }\r\n                                                                    fieldDisplayName=\"First Name\"\r\n                                                                />\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={6}>\r\n                                                            <FormGroup>\r\n                                                                <Label\r\n                                                                    for={`contact-lastName-${index}`}\r\n                                                                >\r\n                                                                    Last Name *\r\n                                                                </Label>\r\n                                                                <Controller\r\n                                                                    name={`additionalContacts.${index}.lastName`}\r\n                                                                    control={\r\n                                                                        control\r\n                                                                    }\r\n                                                                    rules={{\r\n                                                                        required:\r\n                                                                            'Last name is required'\r\n                                                                    }}\r\n                                                                    render={({\r\n                                                                        field\r\n                                                                    }) => (\r\n                                                                        <Input\r\n                                                                            {...field}\r\n                                                                            type=\"text\"\r\n                                                                            id={`contact-lastName-${index}`}\r\n                                                                            placeholder=\"Enter last name\"\r\n                                                                            invalid={\r\n                                                                                !!errors\r\n                                                                                    .additionalContacts?.[\r\n                                                                                    index\r\n                                                                                ]\r\n                                                                                    ?.lastName\r\n                                                                            }\r\n                                                                        />\r\n                                                                    )}\r\n                                                                />\r\n                                                                <DisplayFormError\r\n                                                                    error={\r\n                                                                        errors\r\n                                                                            .additionalContacts?.[\r\n                                                                            index\r\n                                                                        ]\r\n                                                                            ?.lastName\r\n                                                                    }\r\n                                                                    fieldDisplayName=\"Last Name\"\r\n                                                                />\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                    </Row>\r\n\r\n                                                    <FormGroup>\r\n                                                        <Label\r\n                                                            for={`contact-email-${index}`}\r\n                                                        >\r\n                                                            Email *\r\n                                                        </Label>\r\n                                                        <Controller\r\n                                                            name={`additionalContacts.${index}.email`}\r\n                                                            control={control}\r\n                                                            rules={{\r\n                                                                required:\r\n                                                                    'Email is required',\r\n                                                                pattern: {\r\n                                                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                                                    message:\r\n                                                                        'Invalid email address'\r\n                                                                }\r\n                                                            }}\r\n                                                            render={({\r\n                                                                field\r\n                                                            }) => (\r\n                                                                <Input\r\n                                                                    {...field}\r\n                                                                    type=\"email\"\r\n                                                                    id={`contact-email-${index}`}\r\n                                                                    placeholder=\"Enter email address\"\r\n                                                                    invalid={\r\n                                                                        !!errors\r\n                                                                            .additionalContacts?.[\r\n                                                                            index\r\n                                                                        ]?.email\r\n                                                                    }\r\n                                                                />\r\n                                                            )}\r\n                                                        />\r\n                                                        <DisplayFormError\r\n                                                            error={\r\n                                                                errors\r\n                                                                    .additionalContacts?.[\r\n                                                                    index\r\n                                                                ]?.email\r\n                                                            }\r\n                                                            fieldDisplayName=\"Email\"\r\n                                                        />\r\n                                                    </FormGroup>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={6}>\r\n                                                            <FormGroup>\r\n                                                                <Label\r\n                                                                    for={`contact-jobTitle-${index}`}\r\n                                                                >\r\n                                                                    Job Title\r\n                                                                </Label>\r\n                                                                <Controller\r\n                                                                    name={`additionalContacts.${index}.jobTitle`}\r\n                                                                    control={\r\n                                                                        control\r\n                                                                    }\r\n                                                                    render={({\r\n                                                                        field\r\n                                                                    }) => (\r\n                                                                        <Input\r\n                                                                            {...field}\r\n                                                                            type=\"text\"\r\n                                                                            id={`contact-jobTitle-${index}`}\r\n                                                                            placeholder=\"Enter job title\"\r\n                                                                        />\r\n                                                                    )}\r\n                                                                />\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={6}>\r\n                                                            <FormGroup>\r\n                                                                <Label\r\n                                                                    for={`contact-phoneNumber-${index}`}\r\n                                                                >\r\n                                                                    Phone Number\r\n                                                                </Label>\r\n                                                                <Controller\r\n                                                                    name={`additionalContacts.${index}.phoneNumber`}\r\n                                                                    control={\r\n                                                                        control\r\n                                                                    }\r\n                                                                    render={({\r\n                                                                        field\r\n                                                                    }) => (\r\n                                                                        <Input\r\n                                                                            {...field}\r\n                                                                            type=\"tel\"\r\n                                                                            id={`contact-phoneNumber-${index}`}\r\n                                                                            placeholder=\"Enter phone number\"\r\n                                                                        />\r\n                                                                    )}\r\n                                                                />\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                    </Row>\r\n\r\n                                                    <FormGroup>\r\n                                                        <Label>Roles</Label>\r\n                                                        <div className=\"d-flex flex-wrap gap-2\">\r\n                                                            {customerRoleOptions\r\n                                                                .filter(\r\n                                                                    role =>\r\n                                                                        role.value !==\r\n                                                                        CustomerRole.Administrator\r\n                                                                )\r\n                                                                .map(role => (\r\n                                                                    <Button\r\n                                                                        key={\r\n                                                                            role.value\r\n                                                                        }\r\n                                                                        type=\"button\"\r\n                                                                        color={\r\n                                                                            watchedFields.additionalContacts[\r\n                                                                                index\r\n                                                                            ]?.roles?.includes(\r\n                                                                                role.value\r\n                                                                            )\r\n                                                                                ? 'primary'\r\n                                                                                : 'secondary'\r\n                                                                        }\r\n                                                                        size=\"sm\"\r\n                                                                        className=\"mb-2\"\r\n                                                                        onClick={() =>\r\n                                                                            toggleRole(\r\n                                                                                index,\r\n                                                                                role.value\r\n                                                                            )\r\n                                                                        }\r\n                                                                    >\r\n                                                                        {watchedFields.additionalContacts[\r\n                                                                            index\r\n                                                                        ]?.roles?.includes(\r\n                                                                            role.value\r\n                                                                        ) && (\r\n                                                                            <Check\r\n                                                                                size={\r\n                                                                                    14\r\n                                                                                }\r\n                                                                                className=\"me-1\"\r\n                                                                            />\r\n                                                                        )}\r\n                                                                        {\r\n                                                                            role.label.split(\r\n                                                                                ' ('\r\n                                                                            )[0]\r\n                                                                        }\r\n                                                                    </Button>\r\n                                                                ))}\r\n                                                        </div>\r\n                                                        <FormText>\r\n                                                            Select the roles\r\n                                                            this contact will\r\n                                                            have in your\r\n                                                            organization.\r\n                                                        </FormText>\r\n                                                        <Controller\r\n                                                            name={`additionalContacts.${index}.roles`}\r\n                                                            control={control}\r\n                                                            rules={{\r\n                                                                validate:\r\n                                                                    value =>\r\n                                                                        (value &&\r\n                                                                            value.length >\r\n                                                                                0) ||\r\n                                                                        'At least one role must be selected'\r\n                                                            }}\r\n                                                            render={({\r\n                                                                fieldState: {\r\n                                                                    error\r\n                                                                }\r\n                                                            }) =>\r\n                                                                error ? (\r\n                                                                    <DisplayFormError\r\n                                                                        error={\r\n                                                                            error\r\n                                                                        }\r\n                                                                        fieldDisplayName=\"Roles\"\r\n                                                                    />\r\n                                                                ) : (\r\n                                                                    <></>\r\n                                                                )\r\n                                                            }\r\n                                                        />\r\n                                                    </FormGroup>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        ))}\r\n\r\n                                        <div className=\"d-flex justify-content-between mt-4\">\r\n                                            <Button\r\n                                                color=\"secondary\"\r\n                                                outline\r\n                                                onClick={() => toggleTab('2')}\r\n                                            >\r\n                                                Back\r\n                                            </Button>\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                onClick={async () => {\r\n                                                    const isValid =\r\n                                                        await trigger(\r\n                                                            'additionalContacts'\r\n                                                        );\r\n                                                    if (isValid) {\r\n                                                        toggleTab('4');\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                Next: Review\r\n                                            </Button>\r\n                                        </div>\r\n                                    </TabPane>\r\n\r\n                                    {/* Tab 4: Review and Confirm */}\r\n                                    <TabPane tabId=\"4\">\r\n                                        <h5 className=\"mb-4\">\r\n                                            Review Your Information\r\n                                        </h5>\r\n\r\n                                        <Card className=\"mb-4 bg-light\">\r\n                                            <CardBody>\r\n                                                <h6 className=\"mb-3\">\r\n                                                    Company Details\r\n                                                </h6>\r\n                                                <p>\r\n                                                    <strong>\r\n                                                        Company Name:\r\n                                                    </strong>{' '}\r\n                                                    {watchedFields.companyName}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Timezone:</strong>{' '}\r\n                                                    {watchedFields.timeZone}\r\n                                                </p>\r\n                                            </CardBody>\r\n                                        </Card>\r\n\r\n                                        <Card className=\"mb-4 bg-light\">\r\n                                            <CardBody>\r\n                                                <h6 className=\"mb-3\">\r\n                                                    Primary Contact\r\n                                                </h6>\r\n                                                <p>\r\n                                                    <strong>Name:</strong>{' '}\r\n                                                    {givenName} {familyName}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <strong>Email:</strong>{' '}\r\n                                                    {email}\r\n                                                </p>\r\n                                                {watchedFields.jobTitle && (\r\n                                                    <p>\r\n                                                        <strong>\r\n                                                            Job Title:\r\n                                                        </strong>{' '}\r\n                                                        {watchedFields.jobTitle}\r\n                                                    </p>\r\n                                                )}\r\n                                                {watchedFields.phoneNumber && (\r\n                                                    <p>\r\n                                                        <strong>Phone:</strong>{' '}\r\n                                                        {\r\n                                                            watchedFields.phoneNumber\r\n                                                        }\r\n                                                    </p>\r\n                                                )}\r\n                                            </CardBody>\r\n                                        </Card>\r\n\r\n                                        {fields.length > 0 && (\r\n                                            <Card className=\"mb-4 bg-light\">\r\n                                                <CardBody>\r\n                                                    <h6 className=\"mb-3\">\r\n                                                        Additional Contacts\r\n                                                    </h6>\r\n                                                    {watchedFields.additionalContacts.map(\r\n                                                        (contact, index) => (\r\n                                                            <div\r\n                                                                key={index}\r\n                                                                className=\"mb-3 pb-3 border-bottom\"\r\n                                                            >\r\n                                                                <p className=\"mb-1\">\r\n                                                                    <strong>\r\n                                                                        Contact\r\n                                                                        #\r\n                                                                        {index +\r\n                                                                            1}\r\n                                                                        :\r\n                                                                    </strong>{' '}\r\n                                                                    {\r\n                                                                        contact.firstName\r\n                                                                    }{' '}\r\n                                                                    {\r\n                                                                        contact.lastName\r\n                                                                    }\r\n                                                                </p>\r\n                                                                <p className=\"mb-1\">\r\n                                                                    <strong>\r\n                                                                        Email:\r\n                                                                    </strong>{' '}\r\n                                                                    {\r\n                                                                        contact.email\r\n                                                                    }\r\n                                                                </p>\r\n                                                                {contact.jobTitle && (\r\n                                                                    <p className=\"mb-1\">\r\n                                                                        <strong>\r\n                                                                            Job\r\n                                                                            Title:\r\n                                                                        </strong>{' '}\r\n                                                                        {\r\n                                                                            contact.jobTitle\r\n                                                                        }\r\n                                                                    </p>\r\n                                                                )}\r\n                                                                {contact.phoneNumber && (\r\n                                                                    <p className=\"mb-1\">\r\n                                                                        <strong>\r\n                                                                            Phone:\r\n                                                                        </strong>{' '}\r\n                                                                        {\r\n                                                                            contact.phoneNumber\r\n                                                                        }\r\n                                                                    </p>\r\n                                                                )}\r\n                                                                <p className=\"mb-1\">\r\n                                                                    <strong>\r\n                                                                        Roles:\r\n                                                                    </strong>{' '}\r\n                                                                    {contact\r\n                                                                        .roles\r\n                                                                        ?.length >\r\n                                                                    0\r\n                                                                        ? contact.roles\r\n                                                                              .map(\r\n                                                                                  r =>\r\n                                                                                      customerRoleOptions\r\n                                                                                          .find(\r\n                                                                                              o =>\r\n                                                                                                  o.value ===\r\n                                                                                                  r\r\n                                                                                          )\r\n                                                                                          ?.label.split(\r\n                                                                                              ' ('\r\n                                                                                          )[0]\r\n                                                                              )\r\n                                                                              .join(\r\n                                                                                  ', '\r\n                                                                              )\r\n                                                                        : 'None assigned'}\r\n                                                                </p>\r\n                                                            </div>\r\n                                                        )\r\n                                                    )}\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        )}\r\n\r\n                                        <Card className=\"mb-4 bg-light\">\r\n                                            <CardBody>\r\n                                                <h6 className=\"mb-3\">\r\n                                                    Subscription\r\n                                                </h6>\r\n                                                <p>\r\n                                                    <strong>Plan:</strong> Free\r\n                                                    Trial\r\n                                                </p>\r\n                                                <p className=\"text-muted small\">\r\n                                                    Your free trial gives you\r\n                                                    full access to all features\r\n                                                    of Certavue for evaluation\r\n                                                    purposes.\r\n                                                </p>\r\n                                            </CardBody>\r\n                                        </Card>\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                maxHeight: '200px',\r\n                                                overflow: 'auto',\r\n                                                border: '1px solid #ced4da',\r\n                                                borderRadius: '.25rem',\r\n                                                padding: '10px',\r\n                                                marginBottom: '20px'\r\n                                            }}\r\n                                        >\r\n                                            <TermsAndConditions />\r\n                                        </div>\r\n\r\n                                        <FormGroup check className=\"mb-4\">\r\n                                            <Controller\r\n                                                name=\"acceptTerms\"\r\n                                                control={control}\r\n                                                rules={{required: true}}\r\n                                                render={({field}) => (\r\n                                                    <Input\r\n                                                        type=\"checkbox\"\r\n                                                        id=\"acceptTerms\"\r\n                                                        checked={field.value}\r\n                                                        onChange={e =>\r\n                                                            field.onChange(\r\n                                                                e.target.checked\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                            <Label for=\"acceptTerms\" check>\r\n                                                I have read and accept the Terms\r\n                                                and Conditions\r\n                                            </Label>\r\n                                        </FormGroup>\r\n\r\n                                        {backendError && (\r\n                                            <Alert\r\n                                                color=\"danger\"\r\n                                                className=\"mb-4\"\r\n                                            >\r\n                                                {backendError}\r\n                                            </Alert>\r\n                                        )}\r\n\r\n                                        <div className=\"d-flex justify-content-between mt-4\">\r\n                                            <Button\r\n                                                color=\"secondary\"\r\n                                                outline\r\n                                                onClick={() => toggleTab('3')}\r\n                                            >\r\n                                                Back\r\n                                            </Button>\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                color=\"success\"\r\n                                                disabled={\r\n                                                    !watchedFields.acceptTerms ||\r\n                                                    registrationMutation.isPending\r\n                                                }\r\n                                            >\r\n                                                {registrationMutation.isPending\r\n                                                    ? 'Processing...'\r\n                                                    : 'Complete Registration'}\r\n                                            </Button>\r\n                                        </div>\r\n                                    </TabPane>\r\n                                </TabContent>\r\n                            </Form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CompanyRegistrationPage;\r\n"],"names":["useRegisterCustomer","options","authenticatedFetch","useCreateAuthenticatedFetch","useMutation","command","response","baseUrl","handleResponse","CompanyRegistrationPage","isAuthenticated","setSignInRedirect","onAuthenticated","givenName","familyName","email","useAuthStateManager","activeTab","setActiveTab","useState","backendError","setBackendError","navigate","useNavigate","browserTimeZone","control","handleSubmit","watch","errors","setValue","trigger","useForm","fields","append","remove","useFieldArray","watchedFields","useEffect","registrationMutation","authResult","toast","unknownErrorToString","error","calculateProgress","progress","isNullOrWhiteSpace","toggleTab","tab","currentTabNumber","isTabValid","handleAddContact","onSubmit","data","CustomerRole","contact","toggleRole","contactIndex","role","currentRoles","newRoles","r","handleLoginRedirect","handleSignUpRedirect","jsx","Container","Row","jsxs","Col","Certavue","Progress","Card","CardBody","Nav","NavItem","NavLink","Building2","User","Users","CreditCard","Form","TabContent","TabPane","FormGroup","Label","Controller","field","Input","DisplayFormError","fieldState","Fragment","TimeZoneSelect","Button","Plus","Alert","AlertTriangle","index","Trash2","_b","_a","_d","_c","_f","_e","customerRoleOptions","Check","FormText","value","o","TermsAndConditions","e","LogIn"],"mappings":"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"}