{"version":3,"file":"ForgotPasswordPage-Kc4Mpt08.js","sources":["../../src/api/auth/useForgotPassword.ts","../../src/components/accounts/ForgotPasswordPage.tsx"],"sourcesContent":["import {\r\n    useMutation,\r\n    UseMutationOptions,\r\n    UseMutationResult\r\n} from '@tanstack/react-query';\r\nimport {ForgotPasswordCommand, EmptyResult} from '../../types';\r\nimport {useCreateAuthenticatedFetch} from '../useCreateAuthenticatedFetch';\r\nimport baseUrl from '../baseUrl';\r\nimport {handleResponse} from '../handleResponse';\r\n\r\nconst useForgotPassword = (\r\n    options?: UseMutationOptions<EmptyResult, Error, ForgotPasswordCommand>\r\n): UseMutationResult<EmptyResult, Error, ForgotPasswordCommand> => {\r\n    const authenticatedFetch = useCreateAuthenticatedFetch();\r\n\r\n    return useMutation({\r\n        mutationFn: async (command: ForgotPasswordCommand) => {\r\n            const response = await authenticatedFetch(\r\n                `${baseUrl}/api/auth/forgot-password`,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify(command)\r\n                }\r\n            );\r\n            return handleResponse(response);\r\n        },\r\n        ...options\r\n    });\r\n};\r\n\r\nexport default useForgotPassword;\r\n","import React, {useState} from 'react';\r\nimport FormContainer from '../utility/FormContainer';\r\nimport CheckFromEmailSpamJunkWarning from '../utility/CheckFromEmailSpamJunkWarning';\r\nimport useForgotPassword from '../../api/auth/useForgotPassword';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\nimport {ForgotPasswordCommand} from '../../types';\r\nimport {toast} from 'react-toastify';\r\n\r\nconst ForgotPassword = () => {\r\n    const getForgotPassword = (): ForgotPasswordCommand => ({\r\n        email: ''\r\n    });\r\n\r\n    const [forgotPassword, setForgotPassword] =\r\n        useState<ForgotPasswordCommand>(getForgotPassword());\r\n\r\n    const forgotPasswordMutation = useForgotPassword();\r\n\r\n    const onSubmitSuccess = () => {\r\n        toast.success('We have sent a password reset email.');\r\n        setForgotPassword(getForgotPassword());\r\n    };\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        forgotPasswordMutation.mutate(forgotPassword, {\r\n            onSuccess: onSubmitSuccess\r\n        });\r\n    };\r\n\r\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const {name, value} = event.target;\r\n        setForgotPassword(prev => ({...prev, [name]: value}));\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"mb-4\">Forgot password</h1>\r\n\r\n                    <FormContainer>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"email\">Email</Label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    value={forgotPassword.email}\r\n                                    onChange={handleInputChange}\r\n                                    required\r\n                                />\r\n                            </FormGroup>\r\n                            <CheckFromEmailSpamJunkWarning />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                color=\"primary\"\r\n                                disabled={forgotPasswordMutation.isPending}\r\n                            >\r\n                                Send me a reset password email\r\n                            </Button>\r\n                        </Form>\r\n                    </FormContainer>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"names":["useForgotPassword","options","authenticatedFetch","useCreateAuthenticatedFetch","useMutation","command","response","baseUrl","handleResponse","ForgotPassword","getForgotPassword","forgotPassword","setForgotPassword","useState","forgotPasswordMutation","onSubmitSuccess","toast","handleSubmit","event","handleInputChange","name","value","prev","jsx","Container","Row","Col","FormContainer","jsxs","Form","FormGroup","Label","Input","CheckFromEmailSpamJunkWarning","Button"],"mappings":"2TAUA,MAAMA,EACFC,GAC+D,CAC/D,MAAMC,EAAqBC,EAA4B,EAEvD,OAAOC,EAAY,CACf,WAAY,MAAOC,GAAmC,CAClD,MAAMC,EAAW,MAAMJ,EACnB,GAAGK,CAAO,4BACV,CACI,OAAQ,OACR,QAAS,CAAC,eAAgB,kBAAkB,EAC5C,KAAM,KAAK,UAAUF,CAAO,CAAA,CAEpC,EACA,OAAOG,EAAeF,CAAQ,CAClC,EACA,GAAGL,CAAA,CACN,CACL,ECZMQ,EAAiB,IAAM,CACzB,MAAMC,EAAoB,KAA8B,CACpD,MAAO,EAAA,GAGL,CAACC,EAAgBC,CAAiB,EACpCC,EAAA,SAAgCH,GAAmB,EAEjDI,EAAyBd,EAAkB,EAE3Ce,EAAkB,IAAM,CAC1BC,EAAM,QAAQ,sCAAsC,EACpDJ,EAAkBF,GAAmB,CACzC,EAEMO,EAAgBC,GAA4C,CAC9DA,EAAM,eAAe,EACrBJ,EAAuB,OAAOH,EAAgB,CAC1C,UAAWI,CAAA,CACd,CACL,EAEMI,EAAqBD,GAA+C,CACtE,KAAM,CAAC,KAAAE,EAAM,MAAAC,CAAK,EAAIH,EAAM,OACVN,EAAAU,IAAS,CAAC,GAAGA,EAAM,CAACF,CAAI,EAAGC,GAAO,CACxD,EAEA,OACKE,MAAAC,EAAA,CACG,SAACD,EAAA,IAAAE,EAAA,CACG,gBAACC,EACG,CAAA,SAAA,CAACH,EAAA,IAAA,KAAA,CAAG,UAAU,OAAO,SAAe,kBAAA,EAEnCA,MAAAI,EAAA,CACG,SAACC,EAAAA,KAAAC,EAAA,CAAK,SAAUZ,EACZ,SAAA,CAAAW,OAACE,EACG,CAAA,SAAA,CAACP,EAAA,IAAAQ,EAAA,CAAM,IAAI,QAAQ,SAAK,QAAA,EACxBR,EAAA,IAACS,EAAA,CACG,KAAK,OACL,KAAK,QACL,GAAG,QACH,MAAOrB,EAAe,MACtB,SAAUQ,EACV,SAAQ,EAAA,CAAA,CACZ,EACJ,QACCc,EAA8B,EAAA,EAC/BV,EAAA,IAACW,EAAA,CACG,KAAK,SACL,MAAM,UACN,SAAUpB,EAAuB,UACpC,SAAA,gCAAA,CAAA,CAED,CAAA,CACJ,CACJ,CAAA,CAAA,CACJ,CAAA,CACJ,CAAA,EACJ,CAER"}