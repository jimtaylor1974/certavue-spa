{"version":3,"file":"ContentFileUploadPage-BstE8xQ7.js","sources":["../../src/components/sysadmin/contents/ContentFileUploadPage.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {useNavigate, useLocation} from 'react-router-dom';\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button,\r\n    Alert,\r\n    Progress,\r\n    Card,\r\n    CardBody,\r\n    Spinner\r\n} from 'reactstrap';\r\nimport useUploadContentFile from '../../../api/contents/useUploadContentFile';\r\n\r\nconst ContentFileUploadPage: React.FC = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const currentPath = queryParams.get('path') || '';\r\n\r\n    const [selectedFiles, setSelectedFiles] = useState<FileList | null>(null);\r\n    const [uploadProgress, setUploadProgress] = useState(0);\r\n    const [destinationPath, setDestinationPath] = useState(currentPath);\r\n    const [uploading, setUploading] = useState(false);\r\n    const [uploadResults, setUploadResults] = useState<\r\n        Array<{name: string; success: boolean; error?: string}>\r\n    >([]);\r\n\r\n    const uploadMutation = useUploadContentFile();\r\n\r\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            setSelectedFiles(e.target.files);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (!selectedFiles || selectedFiles.length === 0 || uploading) {\r\n            return;\r\n        }\r\n\r\n        // Reset state for new upload\r\n        setUploadResults([]);\r\n        setUploadProgress(0);\r\n        setUploading(true);\r\n\r\n        // Create a new array from FileList for easier iteration\r\n        const files = Array.from(selectedFiles);\r\n\r\n        // Process files one by one\r\n        for (let i = 0; i < files.length; i++) {\r\n            const file = files[i];\r\n\r\n            try {\r\n                // Construct file path\r\n                let filePath = destinationPath\r\n                    ? `${destinationPath}/${file.name}`\r\n                    : file.name;\r\n                filePath = filePath.replace(/^\\//, ''); // Remove leading slash if present\r\n\r\n                console.log(\r\n                    `Uploading file ${i + 1}/${files.length}: ${filePath}`\r\n                );\r\n\r\n                // Upload the file\r\n                await uploadMutation.mutateAsync({\r\n                    path: filePath,\r\n                    file\r\n                });\r\n\r\n                // Update results\r\n                setUploadResults(prev => [\r\n                    ...prev,\r\n                    {name: file.name, success: true}\r\n                ]);\r\n            } catch (error) {\r\n                console.error(`Error uploading ${file.name}:`, error);\r\n\r\n                setUploadResults(prev => [\r\n                    ...prev,\r\n                    {\r\n                        name: file.name,\r\n                        success: false,\r\n                        error:\r\n                            error instanceof Error\r\n                                ? error.message\r\n                                : 'Unknown error'\r\n                    }\r\n                ]);\r\n            }\r\n\r\n            // Update progress\r\n            setUploadProgress(((i + 1) / files.length) * 100);\r\n        }\r\n\r\n        setUploading(false);\r\n    };\r\n\r\n    const goBack = () => {\r\n        navigate('/sysadmin/contents');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>Upload Files</h3>\r\n\r\n            {uploading && (\r\n                <div className=\"mb-4\">\r\n                    <h5>Uploading Files...</h5>\r\n                    <Progress value={uploadProgress} className=\"mb-2\">\r\n                        {Math.round(uploadProgress)}%\r\n                    </Progress>\r\n                </div>\r\n            )}\r\n\r\n            {uploadResults.length > 0 && (\r\n                <Card className=\"mb-4\">\r\n                    <CardBody>\r\n                        <h5>Upload Results</h5>\r\n                        {uploadResults.map((result, index) => (\r\n                            <Alert\r\n                                key={index}\r\n                                color={result.success ? 'success' : 'danger'}\r\n                            >\r\n                                {result.name}:{' '}\r\n                                {result.success\r\n                                    ? 'Uploaded successfully'\r\n                                    : `Failed - ${result.error}`}\r\n                            </Alert>\r\n                        ))}\r\n                    </CardBody>\r\n                </Card>\r\n            )}\r\n\r\n            <Form onSubmit={handleSubmit}>\r\n                <FormGroup>\r\n                    <Label for=\"destinationPath\">Destination Path</Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        id=\"destinationPath\"\r\n                        value={destinationPath}\r\n                        onChange={e => setDestinationPath(e.target.value)}\r\n                        placeholder=\"e.g., images/blog\"\r\n                    />\r\n                    <small className=\"form-text text-muted\">\r\n                        Leave empty to upload to the root directory, or specify\r\n                        a path like \"images/blog\"\r\n                    </small>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label for=\"files\">Select Files</Label>\r\n                    <Input\r\n                        type=\"file\"\r\n                        id=\"files\"\r\n                        multiple\r\n                        onChange={handleFileChange}\r\n                        disabled={uploading}\r\n                    />\r\n                </FormGroup>\r\n\r\n                <Button\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"me-2\"\r\n                    disabled={!selectedFiles || uploading}\r\n                >\r\n                    {uploading ? <Spinner size=\"sm\" /> : 'Upload'}\r\n                </Button>\r\n                <Button color=\"secondary\" onClick={goBack}>\r\n                    Back to Files\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContentFileUploadPage;\r\n"],"names":["ContentFileUploadPage","navigate","useNavigate","location","useLocation","currentPath","selectedFiles","setSelectedFiles","useState","uploadProgress","setUploadProgress","destinationPath","setDestinationPath","uploading","setUploading","uploadResults","setUploadResults","uploadMutation","useUploadContentFile","handleFileChange","e","handleSubmit","files","i","file","filePath","prev","error","goBack","jsx","jsxs","Progress","Card","CardBody","result","index","Alert","Form","FormGroup","Label","Input","Button","Spinner"],"mappings":"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"}