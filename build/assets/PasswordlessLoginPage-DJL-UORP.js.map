{"version":3,"file":"PasswordlessLoginPage-DJL-UORP.js","sources":["../../src/api/auth/useAuthenticateWithToken.ts","../../src/hooks/useEffectOnce.ts","../../src/components/accounts/PasswordlessLoginPage.tsx"],"sourcesContent":["import {\r\n    useMutation,\r\n    UseMutationOptions,\r\n    UseMutationResult\r\n} from '@tanstack/react-query';\r\nimport {TokenModel, AuthTokens} from '../../types';\r\nimport {useCreateAuthenticatedFetch} from '../useCreateAuthenticatedFetch';\r\nimport baseUrl from '../baseUrl';\r\nimport {handleResponse} from '../handleResponse';\r\n\r\nconst useAuthenticateWithToken = (\r\n    options?: UseMutationOptions<AuthTokens, Error, TokenModel>\r\n): UseMutationResult<AuthTokens, Error, TokenModel> => {\r\n    const authenticatedFetch = useCreateAuthenticatedFetch();\r\n\r\n    return useMutation({\r\n        mutationFn: async (command: TokenModel) => {\r\n            const response = await authenticatedFetch(\r\n                `${baseUrl}/api/auth/authenticate-with-token`,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify(command)\r\n                }\r\n            );\r\n            return handleResponse(response);\r\n        },\r\n        ...options\r\n    });\r\n};\r\n\r\nexport default useAuthenticateWithToken;\r\n","import {useEffect, useRef, useState} from 'react';\r\n\r\nexport const useEffectOnce = (effect: () => void | (() => void)) => {\r\n    // https://dev.to/ag-grid/react-18-avoiding-use-effect-getting-called-twice-4i9e\r\n\r\n    const destroyFunc = useRef<void | (() => void) | undefined>(undefined);\r\n    const effectCalled = useRef(false);\r\n    const renderAfterCalled = useRef(false);\r\n    const [_val, setVal] = useState<number>(0);\r\n\r\n    if (effectCalled.current) {\r\n        renderAfterCalled.current = true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        // only execute the effect first time around\r\n        if (!effectCalled.current) {\r\n            destroyFunc.current = effect();\r\n            effectCalled.current = true;\r\n        }\r\n\r\n        // this forces one render after the effect is run\r\n        setVal(val => val + 1);\r\n\r\n        return () => {\r\n            // if the comp didn't render since the useEffect was called,\r\n            // we know it's the dummy React cycle\r\n            if (!renderAfterCalled.current) {\r\n                return;\r\n            }\r\n            if (destroyFunc.current) {\r\n                destroyFunc.current();\r\n            }\r\n        };\r\n    }, []);\r\n};\r\n","import {Alert, Spinner} from 'reactstrap';\r\nimport {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useAuthStateManager} from '../../hooks/useAuthStateManager';\r\nimport useRouteQuery from '../../hooks/useRouteQuery';\r\nimport useAuthenticateWithToken from '../../api/auth/useAuthenticateWithToken';\r\nimport unknownErrorToString from '../../lib/unknownErrorToString';\r\nimport {useEffectOnce} from '../../hooks/useEffectOnce';\r\n\r\nconst PasswordlessLoginPage: React.FC = () => {\r\n    const {onAuthenticated, redirectOnAuthenticated} = useAuthStateManager();\r\n    const query = useRouteQuery();\r\n    const token = query.get('token');\r\n    const redir = query.get('redir');\r\n\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const mutation = useAuthenticateWithToken({\r\n        onSuccess: authTokens => {\r\n            onAuthenticated(authTokens);\r\n            redirectOnAuthenticated(redir);\r\n        },\r\n        onError: (error: unknown) => {\r\n            setError(unknownErrorToString(error));\r\n        }\r\n    });\r\n\r\n    useEffectOnce(() => {\r\n        if (token) {\r\n            mutation.mutate({token});\r\n        } else {\r\n            setError('Invalid token.');\r\n        }\r\n    });\r\n\r\n    if (error) {\r\n        return (\r\n            <>\r\n                <Alert color=\"danger mt-3\">{error}</Alert>\r\n                <br />\r\n                <Link to=\"/\">Home</Link>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <p className=\"text-dark\">Authenticating.</p>\r\n            <div className=\"spinner-full\">\r\n                <Spinner color=\"primary\" />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PasswordlessLoginPage;\r\n"],"names":["useAuthenticateWithToken","options","authenticatedFetch","useCreateAuthenticatedFetch","useMutation","command","response","baseUrl","handleResponse","useEffectOnce","effect","destroyFunc","useRef","effectCalled","renderAfterCalled","_val","setVal","useState","useEffect","val","PasswordlessLoginPage","onAuthenticated","redirectOnAuthenticated","useAuthStateManager","query","useRouteQuery","token","redir","error","setError","mutation","authTokens","unknownErrorToString","jsxs","Fragment","jsx","Alert","Link","Spinner"],"mappings":"+JAUA,MAAMA,EACFC,GACmD,CACnD,MAAMC,EAAqBC,EAA4B,EAEvD,OAAOC,EAAY,CACf,WAAY,MAAOC,GAAwB,CACvC,MAAMC,EAAW,MAAMJ,EACnB,GAAGK,CAAO,oCACV,CACI,OAAQ,OACR,QAAS,CAAC,eAAgB,kBAAkB,EAC5C,KAAM,KAAK,UAAUF,CAAO,CAAA,CAEpC,EACA,OAAOG,EAAeF,CAAQ,CAClC,EACA,GAAGL,CAAA,CACN,CACL,EC3BaQ,EAAiBC,GAAsC,CAG1D,MAAAC,EAAcC,SAAwC,MAAS,EAC/DC,EAAeD,SAAO,EAAK,EAC3BE,EAAoBF,SAAO,EAAK,EAChC,CAACG,EAAMC,CAAM,EAAIC,EAAAA,SAAiB,CAAC,EAErCJ,EAAa,UACbC,EAAkB,QAAU,IAGhCI,EAAAA,UAAU,KAEDL,EAAa,UACdF,EAAY,QAAUD,EAAO,EAC7BG,EAAa,QAAU,IAIpBG,EAAAG,GAAOA,EAAM,CAAC,EAEd,IAAM,CAGJL,EAAkB,SAGnBH,EAAY,SACZA,EAAY,QAAQ,CAE5B,GACD,EAAE,CACT,EC1BMS,EAAkC,IAAM,CAC1C,KAAM,CAAC,gBAAAC,EAAiB,wBAAAC,CAAuB,EAAIC,EAAoB,EACjEC,EAAQC,EAAc,EACtBC,EAAQF,EAAM,IAAI,OAAO,EACzBG,EAAQH,EAAM,IAAI,OAAO,EAEzB,CAACI,EAAOC,CAAQ,EAAIZ,EAAAA,SAAwB,IAAI,EAEhDa,EAAW9B,EAAyB,CACtC,UAAyB+B,GAAA,CACrBV,EAAgBU,CAAU,EAC1BT,EAAwBK,CAAK,CACjC,EACA,QAAUC,GAAmB,CAChBC,EAAAG,EAAqBJ,CAAK,CAAC,CAAA,CACxC,CACH,EAUD,OARAnB,EAAc,IAAM,CACZiB,EACSI,EAAA,OAAO,CAAC,MAAAJ,EAAM,EAEvBG,EAAS,gBAAgB,CAC7B,CACH,EAEGD,EAGQK,EAAA,KAAAC,WAAA,CAAA,SAAA,CAACC,EAAA,IAAAC,EAAA,CAAM,MAAM,cAAe,SAAMR,EAAA,QACjC,KAAG,EAAA,EACHO,EAAA,IAAAE,EAAA,CAAK,GAAG,IAAI,SAAI,MAAA,CAAA,CAAA,EACrB,EAMAJ,EAAA,KAAAC,WAAA,CAAA,SAAA,CAACC,EAAA,IAAA,IAAA,CAAE,UAAU,YAAY,SAAe,kBAAA,EACxCA,EAAAA,IAAC,OAAI,UAAU,eACX,eAACG,EAAQ,CAAA,MAAM,SAAU,CAAA,CAC7B,CAAA,CAAA,EACJ,CAER"}