{"version":3,"file":"Pagination-BhizutCj.js","sources":["../../src/components/utility/Pagination.tsx"],"sourcesContent":["import {\r\n    Button,\r\n    ButtonGroup,\r\n    Input,\r\n    FormGroup,\r\n    Label,\r\n    Card,\r\n    CardBody\r\n} from 'reactstrap';\r\nimport {\r\n    ChevronLeft,\r\n    ChevronRight,\r\n    ChevronsLeft,\r\n    ChevronsRight\r\n} from 'lucide-react';\r\nimport {PagedResult} from '../../types';\r\n\r\ntype PaginationWrapperProps = {\r\n    pagedResult: PagedResult<unknown>;\r\n    onPageSelected: (page: number) => void;\r\n    perPage: number;\r\n    onPerPageSelected: (perPage: number) => void;\r\n};\r\n\r\nconst PaginationWrapper = ({\r\n    pagedResult,\r\n    onPageSelected,\r\n    perPage,\r\n    onPerPageSelected\r\n}: PaginationWrapperProps) => {\r\n    const {page, hasNext, hasPrevious, totalPages} = pagedResult;\r\n\r\n    const previousPage = () => {\r\n        onPageSelected(page - 1);\r\n    };\r\n\r\n    const nextPage = () => {\r\n        onPageSelected(page + 1);\r\n    };\r\n\r\n    return (\r\n        <Card className=\"border-0\">\r\n            <CardBody className=\"d-flex align-items-center\">\r\n                <ButtonGroup className=\"me-3\">\r\n                    <Button\r\n                        onClick={() => {\r\n                            onPageSelected(0);\r\n                        }}\r\n                        disabled={!hasPrevious}\r\n                        color=\"primary\"\r\n                    >\r\n                        <ChevronsLeft />\r\n                    </Button>\r\n                    <Button\r\n                        onClick={previousPage}\r\n                        disabled={!hasPrevious}\r\n                        color=\"primary\"\r\n                    >\r\n                        <ChevronLeft />\r\n                    </Button>\r\n                    <Button\r\n                        onClick={nextPage}\r\n                        disabled={!hasNext}\r\n                        color=\"primary\"\r\n                    >\r\n                        <ChevronRight />\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => {\r\n                            onPageSelected(totalPages);\r\n                        }}\r\n                        disabled={!hasNext}\r\n                        color=\"primary\"\r\n                    >\r\n                        <ChevronsRight />\r\n                    </Button>\r\n                </ButtonGroup>\r\n                <span className=\"me-3\">\r\n                    Page{' '}\r\n                    <strong>\r\n                        {page} of {totalPages}\r\n                    </strong>{' '}\r\n                </span>\r\n                <FormGroup className=\"mb-0 me-3\">\r\n                    <Label for=\"gotoPage\" className=\"me-2\">\r\n                        Go to page:\r\n                    </Label>\r\n                    <Input\r\n                        type=\"number\"\r\n                        id=\"gotoPage\"\r\n                        defaultValue={page}\r\n                        onChange={e => {\r\n                            const targetPage = e.target.value\r\n                                ? Number(e.target.value)\r\n                                : 1;\r\n                            onPageSelected(targetPage);\r\n                        }}\r\n                        style={{width: '100px'}}\r\n                        min={1}\r\n                        max={totalPages}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup className=\"mb-0\">\r\n                    <Input\r\n                        type=\"select\"\r\n                        value={perPage.toString()}\r\n                        onChange={e => {\r\n                            const selectedPerPage = Number(e.target.value);\r\n                            window.localStorage.setItem(\r\n                                'rowsPerPage',\r\n                                e.target.value\r\n                            );\r\n                            onPerPageSelected(selectedPerPage);\r\n                        }}\r\n                    >\r\n                        {[10, 20, 50, 100].map(pp => (\r\n                            <option key={pp} value={pp.toString()}>\r\n                                Show {pp}\r\n                            </option>\r\n                        ))}\r\n                    </Input>\r\n                </FormGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport function getRowsPerPage(): number {\r\n    const rowsPerPage = parseInt(\r\n        window.localStorage.getItem('rowsPerPage') || '',\r\n        10\r\n    );\r\n\r\n    if (rowsPerPage) {\r\n        return rowsPerPage;\r\n    }\r\n\r\n    const defaultRowsPerPage = 20;\r\n    window.localStorage.setItem('rowsPerPage', defaultRowsPerPage.toString());\r\n    return defaultRowsPerPage;\r\n}\r\n\r\nexport default PaginationWrapper;\r\n"],"names":["PaginationWrapper","pagedResult","onPageSelected","perPage","onPerPageSelected","page","hasNext","hasPrevious","totalPages","previousPage","nextPage","Card","jsxs","CardBody","ButtonGroup","jsx","Button","ChevronsLeft","ChevronLeft","ChevronRight","ChevronsRight","FormGroup","Label","Input","e","targetPage","selectedPerPage","pp","getRowsPerPage","rowsPerPage","defaultRowsPerPage"],"mappings":"2SAwBA,MAAMA,EAAoB,CAAC,CACvB,YAAAC,EACA,eAAAC,EACA,QAAAC,EACA,kBAAAC,CACJ,IAA8B,CAC1B,KAAM,CAAC,KAAAC,EAAM,QAAAC,EAAS,YAAAC,EAAa,WAAAC,CAAc,EAAAP,EAE3CQ,EAAe,IAAM,CACvBP,EAAeG,EAAO,CAAC,CAC3B,EAEMK,EAAW,IAAM,CACnBR,EAAeG,EAAO,CAAC,CAC3B,EAEA,aACKM,EAAK,CAAA,UAAU,WACZ,SAACC,EAAA,KAAAC,EAAA,CAAS,UAAU,4BAChB,SAAA,CAACD,EAAAA,KAAAE,EAAA,CAAY,UAAU,OACnB,SAAA,CAAAC,EAAA,IAACC,EAAA,CACG,QAAS,IAAM,CACXd,EAAe,CAAC,CACpB,EACA,SAAU,CAACK,EACX,MAAM,UAEN,eAACU,EAAa,CAAA,CAAA,CAAA,CAClB,EACAF,EAAA,IAACC,EAAA,CACG,QAASP,EACT,SAAU,CAACF,EACX,MAAM,UAEN,eAACW,EAAY,CAAA,CAAA,CAAA,CACjB,EACAH,EAAA,IAACC,EAAA,CACG,QAASN,EACT,SAAU,CAACJ,EACX,MAAM,UAEN,eAACa,EAAa,CAAA,CAAA,CAAA,CAClB,EACAJ,EAAA,IAACC,EAAA,CACG,QAAS,IAAM,CACXd,EAAeM,CAAU,CAC7B,EACA,SAAU,CAACF,EACX,MAAM,UAEN,eAACc,EAAc,CAAA,CAAA,CAAA,CAAA,CACnB,EACJ,EACAR,EAAAA,KAAC,OAAK,CAAA,UAAU,OAAO,SAAA,CAAA,OACd,WACJ,SACI,CAAA,SAAA,CAAAP,EAAK,OAAKG,CAAA,EACf,EAAU,GAAA,EACd,EACAI,EAAAA,KAACS,EAAU,CAAA,UAAU,YACjB,SAAA,CAAAN,MAACO,EAAM,CAAA,IAAI,WAAW,UAAU,OAAO,SAEvC,cAAA,EACAP,EAAA,IAACQ,EAAA,CACG,KAAK,SACL,GAAG,WACH,aAAclB,EACd,SAAemB,GAAA,CACL,MAAAC,EAAaD,EAAE,OAAO,MACtB,OAAOA,EAAE,OAAO,KAAK,EACrB,EACNtB,EAAeuB,CAAU,CAC7B,EACA,MAAO,CAAC,MAAO,OAAO,EACtB,IAAK,EACL,IAAKjB,CAAA,CAAA,CACT,EACJ,EACAO,EAAAA,IAACM,EAAU,CAAA,UAAU,OACjB,SAAAN,EAAA,IAACQ,EAAA,CACG,KAAK,SACL,MAAOpB,EAAQ,SAAS,EACxB,SAAeqB,GAAA,CACX,MAAME,EAAkB,OAAOF,EAAE,OAAO,KAAK,EAC7C,OAAO,aAAa,QAChB,cACAA,EAAE,OAAO,KACb,EACApB,EAAkBsB,CAAe,CACrC,EAEC,SAAC,CAAA,GAAI,GAAI,GAAI,GAAG,EAAE,IAAIC,GAClBf,EAAA,KAAA,SAAA,CAAgB,MAAOe,EAAG,SAAY,EAAA,SAAA,CAAA,QAC7BA,CAAA,CAAA,EADGA,CAEb,CACH,CAAA,CAAA,CAET,CAAA,CAAA,CAAA,CACJ,CACJ,CAAA,CAER,EAEO,SAASC,GAAyB,CACrC,MAAMC,EAAc,SAChB,OAAO,aAAa,QAAQ,aAAa,GAAK,GAC9C,EACJ,EAEA,GAAIA,EACO,OAAAA,EAGX,MAAMC,EAAqB,GAC3B,cAAO,aAAa,QAAQ,cAAeA,EAAmB,UAAU,EACjEA,CACX"}