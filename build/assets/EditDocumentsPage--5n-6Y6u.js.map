{"version":3,"file":"EditDocumentsPage--5n-6Y6u.js","sources":["../../src/api/documents/useGetPagedMarkdownDocuments.ts","../../src/api/documents/useDeleteMarkdownDocument.ts","../../src/api/documents/useWriteToSlnDocs.ts","../../src/components/documents/EditDocumentsPage.tsx"],"sourcesContent":["import {MarkdownDocumentModel, PagedResult} from '../../types';\r\nimport {UseQueryOptions, UseQueryResult, useQuery} from '@tanstack/react-query';\r\nimport baseUrl from '../baseUrl';\r\nimport {useCreateAuthenticatedFetch} from '../useCreateAuthenticatedFetch';\r\nimport {handleResponse} from '../handleResponse';\r\nimport ProblemDetailsError from '../ProblemDetailsError';\r\n\r\ninterface PaginationParams {\r\n    page: number;\r\n    perPage: number;\r\n}\r\n\r\ntype PagedMarkdownDocumentsQueryOptions = Omit<\r\n    UseQueryOptions<\r\n        PagedResult<MarkdownDocumentModel>,\r\n        Error | ProblemDetailsError,\r\n        PagedResult<MarkdownDocumentModel>,\r\n        readonly unknown[]\r\n    >,\r\n    'queryKey' | 'queryFn'\r\n>;\r\n\r\nconst useGetPagedMarkdownDocuments = (\r\n    documentGroup: string,\r\n    directoryPath: string,\r\n    search: string | null,\r\n    pagination: PaginationParams,\r\n    options?: PagedMarkdownDocumentsQueryOptions\r\n): UseQueryResult<\r\n    PagedResult<MarkdownDocumentModel>,\r\n    Error | ProblemDetailsError\r\n> => {\r\n    const queryKey = [\r\n        'pagedMarkdownDocuments',\r\n        {documentGroup, directoryPath, search, pagination}\r\n    ];\r\n\r\n    const url = `${baseUrl}/api/markdown-documents/paged?documentGroup=${encodeURIComponent(documentGroup)}&directoryPath=${encodeURIComponent(directoryPath)}&page=${pagination.page}&perPage=${pagination.perPage}&search=${search == null ? '' : encodeURIComponent(search)}`;\r\n    const authenticatedFetch = useCreateAuthenticatedFetch();\r\n\r\n    const queryFn = async (): Promise<PagedResult<MarkdownDocumentModel>> => {\r\n        const response = await authenticatedFetch(url);\r\n        return handleResponse(response);\r\n    };\r\n\r\n    return useQuery({\r\n        queryKey,\r\n        queryFn,\r\n        ...options\r\n    });\r\n};\r\n\r\nexport default useGetPagedMarkdownDocuments;\r\n","import {EmptyResult} from '../../types';\r\nimport {useCreateAuthenticatedFetch} from '../useCreateAuthenticatedFetch';\r\nimport baseUrl from '../baseUrl';\r\nimport {handleResponse} from '../handleResponse';\r\nimport {\r\n    useMutation,\r\n    UseMutationResult,\r\n    UseMutationOptions,\r\n    useQueryClient\r\n} from '@tanstack/react-query';\r\n\r\nconst useDeleteMarkdownDocument = (\r\n    options?: UseMutationOptions<EmptyResult, Error, string>\r\n): UseMutationResult<EmptyResult, Error, string> => {\r\n    const authenticatedFetch = useCreateAuthenticatedFetch();\r\n    const queryClient = useQueryClient();\r\n\r\n    return useMutation({\r\n        mutationFn: async (id: string) => {\r\n            const response = await authenticatedFetch(\r\n                `${baseUrl}/api/markdown-documents/${id}`,\r\n                {\r\n                    method: 'DELETE'\r\n                }\r\n            );\r\n            return handleResponse(response);\r\n        },\r\n        onSuccess: () => {\r\n            queryClient.invalidateQueries({queryKey: ['markdownDocument']});\r\n        },\r\n        ...options\r\n    });\r\n};\r\n\r\nexport default useDeleteMarkdownDocument;\r\n","import {useCreateAuthenticatedFetch} from '../useCreateAuthenticatedFetch';\r\nimport baseUrl from '../baseUrl';\r\nimport {handleResponse} from '../handleResponse';\r\nimport ProblemDetailsError from '../ProblemDetailsError';\r\nimport {\r\n    useMutation,\r\n    UseMutationResult,\r\n    UseMutationOptions\r\n} from '@tanstack/react-query';\r\n\r\nconst useWriteToSlnDocs = (\r\n    options?: UseMutationOptions<void, Error | ProblemDetailsError, void>\r\n): UseMutationResult<void, Error | ProblemDetailsError, void> => {\r\n    const authenticatedFetch = useCreateAuthenticatedFetch();\r\n\r\n    return useMutation({\r\n        mutationFn: async () => {\r\n            const response = await authenticatedFetch(\r\n                `${baseUrl}/api/markdown-documents/write-to-sln-docs`,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/json'}\r\n                }\r\n            );\r\n            return handleResponse(response);\r\n        },\r\n        ...options\r\n    });\r\n};\r\n\r\nexport default useWriteToSlnDocs;","import React, {useState} from 'react';\r\nimport {Table, Button, Card, CardBody, ButtonGroup} from 'reactstrap';\r\nimport {Plus, FileEdit, Trash2, Eye, FileDown} from 'lucide-react';\r\nimport {Link, useNavigate} from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\nimport {useAuthStateManager} from '../../hooks/useAuthStateManager';\r\nimport Pagination, {getRowsPerPage} from '../utility/Pagination';\r\nimport useGetPagedMarkdownDocuments from '../../api/documents/useGetPagedMarkdownDocuments';\r\nimport useDeleteMarkdownDocument from '../../api/documents/useDeleteMarkdownDocument';\r\nimport useWriteToSlnDocs from '../../api/documents/useWriteToSlnDocs';\r\nimport Spinner from '../utility/Spinner';\r\nimport ErrorDisplay from '../utility/ErrorDisplay';\r\nimport Search from '../utility/Search';\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\nimport {DocumentGroup} from '../../types';\r\nimport isLocalHost from '../../lib/isLocalHost';\r\n\r\nconst EditDocumentsPage: React.FC = () => {\r\n    const [documentGroup, setDocumentGroup] = useLocalStorage<DocumentGroup>(\r\n        'documentGroup',\r\n        'docs'\r\n    );\r\n    const authStateManager = useAuthStateManager();\r\n    const navigate = useNavigate();\r\n    const [page, setPage] = useState(1);\r\n    const [perPage, setPerPage] = useState(getRowsPerPage());\r\n    const [search, setSearch] = useState('');\r\n\r\n    const {\r\n        data: pagedResult,\r\n        error: apiError,\r\n        isLoading: awaitingResponse,\r\n        refetch: fetchDocuments\r\n    } = useGetPagedMarkdownDocuments(\r\n        documentGroup,\r\n        '',\r\n        search,\r\n        {page, perPage},\r\n        {\r\n            enabled: authStateManager.isAuthenticated\r\n        }\r\n    );\r\n\r\n    const deleteDocument = useDeleteMarkdownDocument({\r\n        onSuccess: () => {\r\n            toast.success('Document deleted successfully');\r\n            fetchDocuments();\r\n        },\r\n        onError: error => {\r\n            toast.error(`Error deleting document: ${error.message}`);\r\n        }\r\n    });\r\n\r\n    const writeToSlnDocs = useWriteToSlnDocs({\r\n        onSuccess: () => {\r\n            toast.success('System documentation successfully written to solution docs folder');\r\n        },\r\n        onError: error => {\r\n            toast.error(`Error writing to solution docs: ${error.message}`);\r\n        }\r\n    });\r\n\r\n    const handleDelete = (id: string, path: string) => {\r\n        if (\r\n            window.confirm(\r\n                `Are you sure you want to delete document \"${path}\"?`\r\n            )\r\n        ) {\r\n            deleteDocument.mutate(id);\r\n        }\r\n    };\r\n\r\n    const onPerPageSelected = (newPerPage: number) => {\r\n        setPage(1);\r\n        setPerPage(newPerPage);\r\n    };\r\n\r\n    const getViewUrl = (path: string) => {\r\n        if (documentGroup === 'sys') {\r\n            return `/sysdocs/${path}`;\r\n        }\r\n\r\n        return `/documents/${path}`;\r\n    };\r\n\r\n    const getEditUrl = (id: string) => {\r\n        return `/sysadmin/documents/edit/${id}`;\r\n    };\r\n\r\n    const getNewDocumentUrl = () => {\r\n        // Use the underscore ID for new documents\r\n        return `/sysadmin/documents/edit/_`;\r\n    };\r\n\r\n    if (awaitingResponse) {\r\n        return <Spinner />;\r\n    }\r\n\r\n    if (apiError) {\r\n        return (\r\n            <ErrorDisplay\r\n                error={apiError}\r\n                title=\"Unable to fetch documents\"\r\n                onDismiss={() => fetchDocuments()}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                <div>\r\n                    <h1>Documentation</h1>\r\n                    <ButtonGroup className=\"mt-2\">\r\n                        <Button\r\n                            color={\r\n                                documentGroup === 'docs'\r\n                                    ? 'primary'\r\n                                    : 'secondary'\r\n                            }\r\n                            onClick={() => setDocumentGroup('docs')}\r\n                        >\r\n                            Documents\r\n                        </Button>\r\n                        <Button\r\n                            color={\r\n                                documentGroup === 'sys'\r\n                                    ? 'primary'\r\n                                    : 'secondary'\r\n                            }\r\n                            onClick={() => setDocumentGroup('sys')}\r\n                        >\r\n                            System\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    {documentGroup === 'sys' && isLocalHost && (\r\n                        <Button\r\n                            color=\"success\"\r\n                            className=\"me-2\"\r\n                            onClick={() => writeToSlnDocs.mutate()}\r\n                            disabled={writeToSlnDocs.isPending}\r\n                        >\r\n                            <FileDown size={18} className=\"me-2\" /> Write to Sln Docs\r\n                        </Button>\r\n                    )}\r\n                    <Button\r\n                        color=\"primary\"\r\n                        onClick={() => navigate(getNewDocumentUrl())}\r\n                    >\r\n                        <Plus size={18} className=\"me-2\" /> New Document\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Card className=\"mb-4\">\r\n                <CardBody>\r\n                    <Search searchText={search} onSearch={setSearch} />\r\n                </CardBody>\r\n            </Card>\r\n\r\n            {pagedResult && (\r\n                <>\r\n                    <Table responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Path</th>\r\n                                <th>Last Modified</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {pagedResult.items.map(item => (\r\n                                <tr key={item.id}>\r\n                                    <td>{item.path}</td>\r\n                                    <td>\r\n                                        {new Date(\r\n                                            item.updatedAt || item.createdAt\r\n                                        ).toLocaleString()}\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className=\"d-flex\">\r\n                                            <Button\r\n                                                color=\"primary\"\r\n                                                outline\r\n                                                className=\"me-2\"\r\n                                                tag={Link}\r\n                                                to={getEditUrl(item.id!)}\r\n                                            >\r\n                                                <FileEdit size={18} />\r\n                                            </Button>\r\n                                            <Button\r\n                                                color=\"danger\"\r\n                                                outline\r\n                                                className=\"me-2\"\r\n                                                onClick={() =>\r\n                                                    handleDelete(\r\n                                                        item.id!,\r\n                                                        item.path\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                <Trash2 size={18} />\r\n                                            </Button>\r\n                                            <Button\r\n                                                color=\"info\"\r\n                                                outline\r\n                                                tag={Link}\r\n                                                to={getViewUrl(item.path)}\r\n                                            >\r\n                                                <Eye size={18} />\r\n                                            </Button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                            {pagedResult.items.length === 0 && (\r\n                                <tr>\r\n                                    <td\r\n                                        colSpan={4}\r\n                                        className=\"text-center py-3\"\r\n                                    >\r\n                                        No documents found.\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <Pagination\r\n                        pagedResult={pagedResult}\r\n                        onPageSelected={setPage}\r\n                        perPage={perPage}\r\n                        onPerPageSelected={onPerPageSelected}\r\n                    />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditDocumentsPage;\r\n"],"names":["useGetPagedMarkdownDocuments","documentGroup","directoryPath","search","pagination","options","queryKey","url","baseUrl","authenticatedFetch","useCreateAuthenticatedFetch","useQuery","response","handleResponse","useDeleteMarkdownDocument","queryClient","useQueryClient","useMutation","id","useWriteToSlnDocs","EditDocumentsPage","setDocumentGroup","useLocalStorage","authStateManager","useAuthStateManager","navigate","useNavigate","page","setPage","useState","perPage","setPerPage","getRowsPerPage","setSearch","pagedResult","apiError","awaitingResponse","fetchDocuments","deleteDocument","toast","error","writeToSlnDocs","handleDelete","path","onPerPageSelected","newPerPage","getViewUrl","getEditUrl","getNewDocumentUrl","Spinner","jsx","ErrorDisplay","jsxs","Fragment","ButtonGroup","Button","isLocalHost","FileDown","Plus","Card","CardBody","Search","Table","item","Link","FileEdit","Trash2","Eye","Pagination"],"mappings":"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"}