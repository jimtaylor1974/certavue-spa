{"version":3,"file":"types-46npvi_j.js","sources":["../../src/types.ts"],"sourcesContent":["export type EmptyResult = NonNullable<unknown>;\r\n\r\nexport interface ServiceError {\r\n    key?: string;\r\n    rawValue?: unknown;\r\n    message: string | null;\r\n}\r\n\r\nexport interface ProblemDetails {\r\n    type: string | null;\r\n    title: string | null;\r\n    status: number | null;\r\n    detail: string | null;\r\n    instance: string | null;\r\n    exception?: ServiceErrorExceptionInfo | null;\r\n    errors?: ServiceError[] | null;\r\n    [key: string]: unknown;\r\n}\r\n\r\nexport interface ServiceErrorExceptionInfo {\r\n    message: string;\r\n    detail: string;\r\n    stackTrace?: string | null;\r\n    exceptionType?: string | null;\r\n    innerException?: ServiceErrorExceptionInfo | null;\r\n}\r\n\r\nexport type AuthTokens = {\r\n    access_token: string;\r\n    refresh_token: string;\r\n};\r\n\r\nexport type Authorization = {\r\n    authorize?: boolean;\r\n    roles?: string[];\r\n};\r\n\r\ninterface AuthBase {\r\n    roles: string[];\r\n}\r\n\r\ninterface UnauthenticatedState extends AuthBase {\r\n    isAuthenticated: false;\r\n}\r\n\r\nexport interface BaseAuthenticatedState\r\n    extends AuthBase,\r\n        Record<string, unknown> {\r\n    isAuthenticated: true;\r\n    id: string;\r\n    unique_name: string;\r\n    email: string;\r\n    given_name: string;\r\n    family_name: string;\r\n    can_change_password: boolean;\r\n    hasCustomerLogin: boolean;\r\n}\r\n\r\nexport interface CustomerAuthenticatedState extends BaseAuthenticatedState {\r\n    hasCustomerLogin: true;\r\n    customer_id: string;\r\n    person_id: string;\r\n    has_multiple_customers: boolean;\r\n}\r\n\r\nexport interface NonCustomerAuthenticatedState extends BaseAuthenticatedState {\r\n    hasCustomerLogin: false;\r\n}\r\n\r\nexport type AuthData =\r\n    | UnauthenticatedState\r\n    | CustomerAuthenticatedState\r\n    | NonCustomerAuthenticatedState;\r\n\r\nexport type AuthError = {\r\n    error: string;\r\n    error_description: string;\r\n};\r\n\r\nexport type AuthResult = {\r\n    authTokens?: AuthTokens;\r\n    authError?: AuthError;\r\n    authenticated: boolean;\r\n};\r\n\r\nexport enum LoginProvider {\r\n    BuiltIn = 0,\r\n    Email = 1,\r\n    Microsoft = 2,\r\n    Google = 3\r\n}\r\n\r\nexport type SocialAuthResult = AuthResult & {\r\n    provider: LoginProvider;\r\n    token: string;\r\n    lastName?: string;\r\n    firstName?: string;\r\n    email?: string;\r\n};\r\n\r\nexport interface LoginWithEmailModel {\r\n    email: string;\r\n    redir?: string | null;\r\n}\r\n\r\nexport type ResendEmailConfirmationEmailCommand = {\r\n    email: string;\r\n};\r\n\r\nexport type SendEmailConfirmationEmailCommand = {\r\n    userId: string;\r\n};\r\n\r\nexport type UpdateUserModel = {\r\n    userId: string;\r\n    emailConfirmed?: boolean | null;\r\n    userRoleNames?: string[] | null;\r\n    firstName?: string | null;\r\n    lastName?: string | null;\r\n    email?: string | null;\r\n    password?: string | null;\r\n    isActive?: boolean | null;\r\n};\r\n\r\nexport interface PagedResult<TItem> {\r\n    page: number;\r\n    perPage: number;\r\n    count: number;\r\n    total: number;\r\n    isFirst: boolean;\r\n    isLast: boolean;\r\n    hasNext: boolean;\r\n    hasPrevious: boolean;\r\n    totalPages: number;\r\n    items: TItem[];\r\n}\r\n\r\nexport interface UserInfoModel {\r\n    id: string;\r\n    email: string;\r\n    emailConfirmed: boolean;\r\n    registered: boolean;\r\n    firstName: string;\r\n    lastName: string;\r\n    roles: string[];\r\n    loginProviders: LoginProvider[];\r\n    customers: CustomerInfoModel[];\r\n    isActive: boolean;\r\n}\r\n\r\nexport interface CustomerInfoModel {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\nexport enum TeamPersonType {\r\n    Member = 0,\r\n    Leader = 1\r\n}\r\n\r\nexport interface TeamMemberModel {\r\n    personId: string;\r\n    name: string;\r\n    type: TeamPersonType;\r\n}\r\n\r\nexport interface TeamDetailsModel {\r\n    id: string;\r\n    name: string;\r\n    description?: string;\r\n    timeZone?: string;\r\n    isActive: boolean;\r\n    members: TeamMemberModel[];\r\n}\r\n\r\nexport interface TeamInfoModel {\r\n    id: string;\r\n    name: string;\r\n    description?: string;\r\n    timeZone?: string;\r\n    isActive: boolean;\r\n    memberCount: number;\r\n}\r\n\r\nexport type ChangePasswordCommand = {\r\n    oldPassword: string;\r\n    newPassword: string;\r\n    confirmPassword: string;\r\n};\r\n\r\nexport type EmailConfirmationCommand = {\r\n    userId: string;\r\n    token: string;\r\n};\r\n\r\nexport type ForgotPasswordCommand = {\r\n    email: string;\r\n};\r\n\r\nexport interface UserRegistrationEmailLoginCommand {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    timeZone: string;\r\n    redir: string | null;\r\n}\r\n\r\nexport type UserRegistrationBuiltInCommand = {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    password: string;\r\n    timeZone: string;\r\n    redir: string | null;\r\n};\r\n\r\nexport type UserRegistrationSocialCommand = {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    provider: LoginProvider;\r\n    token: string;\r\n    timeZone: string;\r\n    redir: string | null;\r\n};\r\n\r\ninterface ITokenInfo {\r\n    provider: LoginProvider;\r\n    token: string;\r\n}\r\n\r\nexport type SocialAuthLoginCommand = ITokenInfo;\r\n\r\nexport type TokenModel = {\r\n    token: string;\r\n};\r\n\r\nexport type ResetPasswordCommand = {\r\n    userId: string;\r\n    newPassword: string;\r\n    confirmPassword: string;\r\n    token: string;\r\n};\r\n\r\nexport interface CompanyRegistrationCommand {\r\n    customerName: string;\r\n    timeZone: string;\r\n    administratorContact: ContactPersonCommand;\r\n    additionalContacts: ContactPersonCommand[];\r\n}\r\n\r\nexport interface ContactPersonCommand {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    jobTitle?: string;\r\n    phoneNumber?: string;\r\n    roles: CustomerRole[];\r\n}\r\n\r\nexport enum CustomerRole {\r\n    Administrator,\r\n    TechnicalContact,\r\n    BillingProcurement,\r\n    SupportContact\r\n}\r\n\r\nexport interface PersonModel {\r\n    id: string;\r\n    customerId: string;\r\n    userId?: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    emailDomain: string;\r\n    jobTitle?: string;\r\n    phoneNumber?: string;\r\n    timeZone: string;\r\n    isActive: boolean;\r\n    createdAt: string;\r\n    updatedAt?: string;\r\n    roles: CustomerRole[];\r\n}\r\n\r\nexport interface CreatePersonCommand {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    jobTitle?: string;\r\n    phoneNumber?: string;\r\n    timeZone: string;\r\n    roles: CustomerRole[];\r\n}\r\n\r\nexport interface UpdatePersonCommand {\r\n    id: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    jobTitle?: string;\r\n    phoneNumber?: string;\r\n    timeZone: string;\r\n    roles: CustomerRole[];\r\n}\r\n\r\nexport interface MarkdownDocumentModel {\r\n    id: string | null;\r\n    documentGroup: DocumentGroup;\r\n    path: string;\r\n    directory: string;\r\n    content: string;\r\n    createdAt: string;\r\n    updatedAt: string | null;\r\n    published: boolean;\r\n}\r\n\r\nexport type DocumentGroup = 'docs' | 'sys';\r\n\r\nexport interface ContentItem {\r\n    path: string;\r\n    fullPath: string;\r\n    name: string;\r\n    size: number;\r\n    contentType: string;\r\n    url?: string;\r\n    lastModified: string;\r\n}\r\n\r\nexport interface MoveFileRequest {\r\n    sourcePath: string;\r\n    destinationPath: string;\r\n}\r\n\r\ndeclare global {\r\n    interface Window {\r\n        onAuthenticated: (authResponse: AuthTokens) => void;\r\n        onSocialAuthLogin: (socialAuthResult: SocialAuthResult) => void;\r\n    }\r\n}\r\n\r\nexport interface ProjectsListItem {\r\n    id: string;\r\n    name: string;\r\n    status: ProjectStatus;\r\n    visibility: ProjectVisibility;\r\n    startGlobalWeekNumber: number;\r\n    startOn: string;\r\n    endGlobalWeekNumber: number;\r\n    endOn: string;\r\n    durationInWeeks: number;\r\n}\r\n\r\n// Status and type enums\r\nexport enum ProjectStatus {\r\n    Draft = 0,\r\n    Published = 1\r\n}\r\n\r\nexport enum ProjectVisibility {\r\n    NonDisclosed = 0,\r\n    Disclosed = 1\r\n}\r\n\r\nexport enum PhaseType {\r\n    Delivery = 0,\r\n    Delivered = 1\r\n}\r\n\r\nexport enum AllocationType {\r\n    Delivery = 0,\r\n    DeliveredTo = 1\r\n}\r\n\r\nexport enum EngagementContext {\r\n    BAU = 0,\r\n    NonBAU = 1\r\n}\r\n\r\n// Base interfaces\r\nexport interface PersonInfo {\r\n    id: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    phoneNumber: string | null;\r\n}\r\n\r\n// Project-related interfaces\r\nexport interface ProjectModel {\r\n    id: string | null;\r\n    name: string;\r\n    description?: string;\r\n    timeZone: string; // IANA timezone\r\n    startOn: string; // DateTime when the project starts\r\n    durationInWeeks: number; // Duration in weeks\r\n    status: ProjectStatus;\r\n    visibility: ProjectVisibility;\r\n    engagementContext: EngagementContext;\r\n    startGlobalWeekNumber: number;\r\n    endGlobalWeekNumber: number;\r\n    endOn: string;\r\n    customerId: string;\r\n    phases: PhaseModel[];\r\n    people: ProjectPersonModel[];\r\n    tags: TagModel[];\r\n}\r\n\r\nexport interface PhaseModel {\r\n    id: string;\r\n    projectId: string;\r\n    name: string;\r\n    description?: string;\r\n    startGlobalWeekNumber: number;\r\n    startOn: string;\r\n    endGlobalWeekNumber: number;\r\n    endOn: string;\r\n    durationInWeeks: number; // Duration in weeks\r\n    type: PhaseType;\r\n    colour: string;\r\n}\r\n\r\nexport interface ProjectAllocationModel {\r\n    id: string;\r\n    projectId: string;\r\n    personId?: string;\r\n    teamId?: string;\r\n    person?: PersonInfo;\r\n    team?: TeamInfoModel;\r\n    description: string;\r\n    globalWeekNumber: number;\r\n    weekBeginningOn: string;\r\n    weekEndOn: string;\r\n    hoursBAU: number;\r\n    hoursNonBAU: number;\r\n    allocationType: AllocationType;\r\n    createdAt: string;\r\n    updatedAt?: string;\r\n}\r\n\r\nexport interface ProjectPersonModel {\r\n    id: string;\r\n    projectId: string;\r\n    personId: string;\r\n    projectRole: string;\r\n    canEdit: boolean;\r\n    canEditResources: boolean;\r\n    person: PersonInfo;\r\n}\r\n\r\nexport interface EditProjectPersonModel {\r\n    personId: string;\r\n    projectRole: string;\r\n    canEdit: boolean;\r\n    canEditResources: boolean;\r\n}\r\n\r\n// AI Assistant types\r\nexport interface AssistantInfoModel {\r\n    id: string;\r\n    key: string;\r\n    name: string;\r\n    description: string;\r\n    userInfo: string;\r\n}\r\n\r\nexport interface AssistantModel extends AssistantInfoModel {\r\n    instructions: string;\r\n    tools: string[];\r\n}\r\n\r\nexport interface CreateAssistantRequest {\r\n    key: string;\r\n    name: string;\r\n    description: string;\r\n    userInfo: string;\r\n    instructions: string;\r\n    toolNames: string[];\r\n}\r\n\r\nexport interface UpdateAssistantRequest {\r\n    key: string;\r\n    name: string;\r\n    description: string;\r\n    userInfo: string;\r\n    instructions: string;\r\n    toolNames: string[];\r\n}\r\n\r\nexport interface AvailableToolModel {\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nexport interface IdResult {\r\n    id: string;\r\n}\r\n\r\nexport interface TagModel {\r\n    id: string | null;\r\n    name: string;\r\n    colour: string;\r\n    icon?: string;\r\n    isActive: boolean;\r\n}\r\n\r\n// Dashboard-specific shared types\r\nexport enum AssignmentType {\r\n    Person = 1,\r\n    Team = 2\r\n}\r\n\r\nexport interface DashboardAllocationModel {\r\n    id: string;\r\n    resourceId: string;\r\n    assignmentType: AssignmentType;\r\n    globalWeekNumber: number;\r\n    weekBeginningOn: string;\r\n    weekEndOn: string;\r\n    hoursBAU: number;\r\n    hoursNonBAU: number;\r\n    percentageOfWorkWeekBAU: number;\r\n    percentageOfWorkWeekNonBAU: number;\r\n    description?: string;\r\n    phaseName?: string;\r\n    phaseColor?: string;\r\n    availableHours?: number;\r\n    baseHours?: number;\r\n}\r\n\r\nexport interface DashboardProjectPhaseModel {\r\n    id: string;\r\n    name: string;\r\n    color: string;\r\n    startGlobalWeekNumber: number;\r\n    startOn: string;\r\n    endGlobalWeekNumber: number;\r\n    endOn: string;\r\n    durationInWeeks: number;\r\n}\r\n\r\nexport interface DashboardProjectModel {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    engagementContext: EngagementContext;\r\n    startGlobalWeekNumber: number;\r\n    startOn: string;\r\n    endGlobalWeekNumber: number;\r\n    endOn: string;\r\n    durationInWeeks: number;\r\n    phases: DashboardProjectPhaseModel[];\r\n    tags: TagModel[];\r\n    canEdit: boolean;\r\n    canEditResources: boolean;\r\n}\r\n\r\n// Resources Dashboard types\r\nexport interface ResourceProjectDetail {\r\n    project: DashboardProjectModel; // Now contains the full project model\r\n    allocations: DashboardAllocationModel[]; // Uses shared allocation model\r\n    color: string; // Context-specific color for the resource view\r\n    averagePercentage: number;\r\n}\r\n\r\nexport interface WeeklyAllocation {\r\n    globalWeekNumber: number;\r\n    weekBeginningOn: string;\r\n    weekEndOn: string;\r\n    totalHoursBAU: number;\r\n    totalHoursNonBAU: number;\r\n    allocationPercentageBAU: number;\r\n    allocationPercentageNonBAU: number;\r\n    availableHours?: number;\r\n    baseHours?: number;\r\n}\r\n\r\nexport interface TeamInfo {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\nexport interface ResourceTimeline {\r\n    id: string;\r\n    name: string;\r\n    type: AssignmentType;\r\n    allocations: WeeklyAllocation[];\r\n    projectDetails: ResourceProjectDetail[];\r\n    teams: TeamInfo[]; // For persons, contains teams they belong to. Empty for teams.\r\n}\r\n\r\nexport interface ResourcesDashboardData {\r\n    resources: ResourceTimeline[];\r\n}\r\n\r\n// Projects Dashboard types\r\nexport interface ProjectResource {\r\n    id: string;\r\n    name: string;\r\n    assignmentType: AssignmentType;\r\n    allocations: DashboardAllocationModel[];\r\n    teams: TeamInfo[]; // For persons, contains teams they belong to. Empty for teams.\r\n}\r\n\r\nexport interface ProjectTimeline {\r\n    project: DashboardProjectModel; // Now contains the full project model\r\n    resources: ProjectResource[];\r\n}\r\n\r\nexport interface ProjectsDashboardData {\r\n    projects: ProjectTimeline[];\r\n}\r\n"],"names":["LoginProvider","TeamPersonType","CustomerRole","CustomerRole2","ProjectStatus","ProjectVisibility","PhaseType","AllocationType","EngagementContext","AssignmentType"],"mappings":"AAqFY,IAAAA,GAAAA,IACRA,EAAAA,EAAA,QAAU,CAAV,EAAA,UACAA,EAAAA,EAAA,MAAQ,CAAR,EAAA,QACAA,EAAAA,EAAA,UAAY,CAAZ,EAAA,YACAA,EAAAA,EAAA,OAAS,CAAT,EAAA,SAJQA,IAAAA,GAAA,CAAA,CAAA,EAsEAC,GAAAA,IACRA,EAAAA,EAAA,OAAS,CAAT,EAAA,SACAA,EAAAA,EAAA,OAAS,CAAT,EAAA,SAFQA,IAAAA,GAAA,CAAA,CAAA,EAyGAC,GAAAA,IACRA,EAAAC,EAAA,cAAA,CAAA,EAAA,gBACAD,EAAAC,EAAA,iBAAA,CAAA,EAAA,mBACAD,EAAAC,EAAA,mBAAA,CAAA,EAAA,qBACAD,EAAAC,EAAA,eAAA,CAAA,EAAA,iBAJQD,IAAAA,GAAA,CAAA,CAAA,EA6FAE,GAAAA,IACRA,EAAAA,EAAA,MAAQ,CAAR,EAAA,QACAA,EAAAA,EAAA,UAAY,CAAZ,EAAA,YAFQA,IAAAA,GAAA,CAAA,CAAA,EAKAC,GAAAA,IACRA,EAAAA,EAAA,aAAe,CAAf,EAAA,eACAA,EAAAA,EAAA,UAAY,CAAZ,EAAA,YAFQA,IAAAA,GAAA,CAAA,CAAA,EAKAC,GAAAA,IACRA,EAAAA,EAAA,SAAW,CAAX,EAAA,WACAA,EAAAA,EAAA,UAAY,CAAZ,EAAA,YAFQA,IAAAA,GAAA,CAAA,CAAA,EAKAC,GAAAA,IACRA,EAAAA,EAAA,SAAW,CAAX,EAAA,WACAA,EAAAA,EAAA,YAAc,CAAd,EAAA,cAFQA,IAAAA,GAAA,CAAA,CAAA,EAKAC,GAAAA,IACRA,EAAAA,EAAA,IAAM,CAAN,EAAA,MACAA,EAAAA,EAAA,OAAS,CAAT,EAAA,SAFQA,IAAAA,GAAA,CAAA,CAAA,EAqIAC,GAAAA,IACRA,EAAAA,EAAA,OAAS,CAAT,EAAA,SACAA,EAAAA,EAAA,KAAO,CAAP,EAAA,OAFQA,IAAAA,GAAA,CAAA,CAAA"}